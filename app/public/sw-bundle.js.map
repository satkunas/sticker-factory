{
  "version": 3,
  "sources": ["../../node_modules/js-yaml/dist/js-yaml.mjs", "../src/utils/logger.ts", "../src/utils/svg.ts", "../src/config/constants.ts", "../src/utils/template-processing.ts", "../src/sw-src/sw-template-loader.ts", "../src/utils/layer-positioning.ts", "../src/utils/mask-utils.ts", "../src/utils/svg-transforms.ts", "../src/utils/ui-constants.ts", "../src/utils/font-utils.ts", "../src/utils/text-multiline.ts", "../src/utils/svg-string-generator.ts", "../src/utils/url-encoding.ts", "../src/utils/svg-bounds.ts", "../src/sw-src/svg-handler.ts", "../src/sw-src/index.ts"],
  "sourcesContent": ["\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '\u2192') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn\u2019t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  \u21D2 ns-plain-safe-out\n//                             c = flow-in   \u21D2 ns-plain-safe-in\n//                             c = block-key \u21D2 ns-plain-safe-out\n//                             c = flow-key  \u21D2 ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - \u201C:\u201D - \u201C#\u201D )\n//                            | ( /* An ns-char preceding */ \u201C#\u201D )\n//                            | ( \u201C:\u201D /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( \u201C?\u201D | \u201C:\u201D | \u201C-\u201D ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // \u201C-\u201D | \u201C?\u201D | \u201C:\u201D | \u201C,\u201D | \u201C[\u201D | \u201C]\u201D | \u201C{\u201D | \u201C}\u201D\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | \u201C#\u201D | \u201C&\u201D | \u201C*\u201D | \u201C!\u201D | \u201C|\u201D | \u201C=\u201D | \u201C>\u201D | \u201C'\u201D | \u201C\"\u201D\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | \u201C%\u201D | \u201C@\u201D | \u201C`\u201D)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    \u2022 No ending newline => unaffected; already using strip \"-\" chomping.\n//    \u2022 Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth \u2264 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines\u2014\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | \u201C-\u201D\n      // [39] ns-uri-char     ::=  \u201C%\u201D ns-hex-digit ns-hex-digit | ns-word-char | \u201C#\u201D\n      //                         | \u201C;\u201D | \u201C/\u201D | \u201C?\u201D | \u201C:\u201D | \u201C@\u201D | \u201C&\u201D | \u201C=\u201D | \u201C+\u201D | \u201C$\u201D | \u201C,\u201D\n      //                         | \u201C_\u201D | \u201C.\u201D | \u201C!\u201D | \u201C~\u201D | \u201C*\u201D | \u201C'\u201D | \u201C(\u201D | \u201C)\u201D | \u201C[\u201D | \u201C]\u201D\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n", "// Environment-based logging utility\n// Only logs in development mode, silent in production\n\nconst IS_DEVELOPMENT = typeof import.meta.env !== 'undefined'\n  ? (import.meta.env.DEV || import.meta.env.MODE === 'development')\n  // eslint-disable-next-line no-undef\n  : (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') || true // Default to true in Node.js context\n\ninterface Logger {\n  info: (message: string, ...args: any[]) => void\n  warn: (message: string, ...args: any[]) => void\n  error: (message: string, ...args: any[]) => void\n  debug: (message: string, ...args: any[]) => void\n  time: (label: string) => void\n  timeEnd: (label: string) => void\n  performance: (operation: string, duration: number, metadata?: any) => void\n  api: (method: string, endpoint: string, status: number, duration: number) => void\n  memory: (operation: string, before: number, after: number) => void\n}\n\nexport const logger: Logger = {\n  info: (message: string, ...args: any[]) => {\n    if (IS_DEVELOPMENT) {\n      // eslint-disable-next-line no-console\n      console.info(`[INFO] ${message}`, ...args)\n    }\n  },\n\n  warn: (message: string, ...args: any[]) => {\n    if (IS_DEVELOPMENT) {\n      // eslint-disable-next-line no-console\n      console.warn(`[WARN] ${message}`, ...args)\n    }\n  },\n\n  error: (message: string, ...args: any[]) => {\n    if (IS_DEVELOPMENT) {\n      // eslint-disable-next-line no-console\n      console.error(`[ERROR] ${message}`, ...args)\n    }\n  },\n\n  debug: (message: string, ...args: any[]) => {\n    if (IS_DEVELOPMENT) {\n      // eslint-disable-next-line no-console\n      console.debug(`[DEBUG] ${message}`, ...args)\n    }\n  },\n\n  time: (label: string) => {\n    if (IS_DEVELOPMENT) {\n      // eslint-disable-next-line no-console\n      console.time(`[TIMER] ${label}`)\n    }\n  },\n\n  timeEnd: (label: string) => {\n    if (IS_DEVELOPMENT) {\n      // eslint-disable-next-line no-console\n      console.timeEnd(`[TIMER] ${label}`)\n    }\n  },\n\n  performance: (operation: string, duration: number, metadata?: any) => {\n    if (IS_DEVELOPMENT) {\n      const message = `[PERF] ${operation} - ${duration.toFixed(2)}ms`\n      if (metadata) {\n        // eslint-disable-next-line no-console\n        console.info(message, metadata)\n      } else {\n        // eslint-disable-next-line no-console\n        console.info(message)\n      }\n    }\n  },\n\n  api: (method: string, endpoint: string, status: number, duration: number) => {\n    if (IS_DEVELOPMENT) {\n      const statusColor = status < 400 ? '\u2705' : '\u274C'\n      // eslint-disable-next-line no-console\n      console.info(`[API] ${statusColor} ${method} ${endpoint} - ${status} - ${duration.toFixed(3)}ms`)\n    }\n  },\n\n  memory: (operation: string, before: number, after: number) => {\n    if (IS_DEVELOPMENT) {\n      const diff = after - before\n      const diffMB = (diff / (1024 * 1024)).toFixed(2)\n      const sign = diff >= 0 ? '+' : ''\n      // eslint-disable-next-line no-console\n      console.info(`[MEMORY] ${operation} - ${sign}${diffMB}MB (${(before / (1024 * 1024)).toFixed(1)}MB \u2192 ${(after / (1024 * 1024)).toFixed(1)}MB)`)\n    }\n  }\n}\n\n// Production-safe error handler for critical errors that should always be reported\nexport const reportCriticalError = (error: Error | string, context?: string) => {\n  // In production, this could send to error reporting service\n  // For now, we'll use console.error even in production for critical errors\n  const errorMessage = error instanceof Error ? error.message : error\n  const fullMessage = context ? `${context}: ${errorMessage}` : errorMessage\n\n  // eslint-disable-next-line no-console\n  console.error('[CRITICAL]', fullMessage)\n\n  if (error instanceof Error && IS_DEVELOPMENT) {\n    // eslint-disable-next-line no-console\n    console.error('[CRITICAL STACK]', error.stack)\n  }\n}\n\n// Performance monitoring utilities\nexport const createPerformanceTimer = (operation: string) => {\n  const startTime = (window as any).performance.now()\n  const memoryBefore = getMemoryUsage()\n\n  return {\n    end: (metadata?: any) => {\n      const duration = (window as any).performance.now() - startTime\n      const memoryAfter = getMemoryUsage()\n\n      logger.performance(operation, duration, metadata)\n      if (memoryAfter !== memoryBefore) {\n        logger.memory(operation, memoryBefore, memoryAfter)\n      }\n\n      return { duration, memoryBefore, memoryAfter }\n    }\n  }\n}\n\n// Get current memory usage (if available)\nexport const getMemoryUsage = (): number => {\n  if (typeof window !== 'undefined' && 'performance' in window) {\n    // eslint-disable-next-line no-undef\n    const memory = (performance as any).memory\n    if (memory && memory.usedJSHeapSize) {\n      return memory.usedJSHeapSize\n    }\n  }\n  return 0\n}\n\n// Batch logging for operations with multiple steps\nexport const createBatchLogger = (operationName: string) => {\n  const logs: Array<{ step: string; duration: number; metadata?: any }> = []\n  let lastStepTime = (window as any).performance.now()\n\n  return {\n    step: (stepName: string, metadata?: any) => {\n      const now = (window as any).performance.now()\n      const duration = now - lastStepTime\n      logs.push({ step: stepName, duration, metadata })\n      lastStepTime = now\n    },\n\n    finish: () => {\n      const totalDuration = logs.reduce((sum, log) => sum + log.duration, 0)\n      logger.performance(`${operationName} (total)`, totalDuration, {\n        steps: logs.length,\n        breakdown: logs.map(log => ({\n          step: log.step,\n          duration: `${log.duration.toFixed(2)}ms`,\n          metadata: log.metadata\n        }))\n      })\n      return { totalDuration, steps: logs }\n    }\n  }\n}", "/**\n * SVG Utilities\n * Pure TypeScript functions for SVG transformations and calculations\n */\n\nimport type { Point, ViewBox } from '../types/svg-types'\nexport type { Point, ViewBox }\n\nexport interface Size {\n  width: number\n  height: number\n}\n\nexport interface PercentageCoords {\n  x: number | string\n  y: number | string\n}\n\nexport interface PercentagePosition {\n  x: number | string\n  y: number | string\n}\n\nexport interface ResolvedPosition {\n  x: number\n  y: number\n}\n\n\n\nexport function isPercentage(value: number | string): value is string {\n  return typeof value === 'string' && value.includes('%')\n}\n\nexport function parsePercentage(value: string): number {\n  const numericPart = parseFloat(value.replace('%', ''))\n  return numericPart / 100\n}\n\n/**\n * Resolve coordinate from percentage to absolute pixels\n */\nexport function resolveCoordinate(\n  value: number | string,\n  viewBoxDimension: number,\n  viewBoxStart = 0\n): number {\n  if (typeof value === 'number') {\n    return value\n  }\n\n  if (isPercentage(value)) {\n    const percentage = parsePercentage(value)\n    return viewBoxStart + (viewBoxDimension * percentage)\n  }\n\n  return parseFloat(value)\n}\n\nexport function resolvePosition(\n  position: PercentagePosition,\n  viewBox: ViewBox\n): ResolvedPosition {\n  return {\n    x: resolveCoordinate(position.x, viewBox.width, viewBox.x),\n    y: resolveCoordinate(position.y, viewBox.height, viewBox.y)\n  }\n}\n\n/**\n * Resolve line position for line shapes (x1,y1,x2,y2)\n */\nexport function resolveLinePosition(\n  position: { x1: number | string; y1: number | string; x2: number | string; y2: number | string },\n  viewBox: ViewBox\n): { x1: number; y1: number; x2: number; y2: number } {\n  return {\n    x1: resolveCoordinate(position.x1, viewBox.width, viewBox.x),\n    y1: resolveCoordinate(position.y1, viewBox.height, viewBox.y),\n    x2: resolveCoordinate(position.x2, viewBox.width, viewBox.x),\n    y2: resolveCoordinate(position.y2, viewBox.height, viewBox.y)\n  }\n}\n\n\nexport function resolvePercentageCoords(coords: PercentageCoords, viewBox: ViewBox): Point {\n  return {\n    x: resolveCoordinate(coords.x, viewBox.width, viewBox.x),\n    y: resolveCoordinate(coords.y, viewBox.height, viewBox.y)\n  }\n}\n\n\n\n\n/**\n * Validate that a value is a finite number (not NaN, Infinity, or non-numeric)\n */\nexport function isValidNumber(value: unknown): value is number {\n  return typeof value === 'number' && !isNaN(value) && isFinite(value)\n}\n\n", "// Application-wide constants following ALL_UPPERCASE naming convention\n\n// Storage keys (legacy - app uses URL-driven state now)\nexport const STORAGE_VERSION = 1\n\n// Template processing\nexport const TEMPLATE_PADDING = 20\nexport const DEFAULT_VIEWBOX_WIDTH = 500\nexport const DEFAULT_VIEWBOX_HEIGHT = 400\nexport const MIN_VIEWBOX_WIDTH = 400\nexport const MIN_VIEWBOX_HEIGHT = 400\n\n// Shape defaults (fallback for legacy/malformed templates)\nexport const DEFAULT_SHAPE_WIDTH = 100\nexport const DEFAULT_SHAPE_HEIGHT = 100\nexport const DEFAULT_ELLIPSE_HEIGHT = 50\nexport const DEFAULT_POLYGON_SIZE = 50\n\n// Font loading and display\nexport const FONT_INITIAL_VISIBLE_COUNT = 20\nexport const FONT_SCROLL_THRESHOLD = 100\nexport const FONT_TILE_WIDTH = 80\nexport const FONT_TILE_HEIGHT = 80\nexport const FONT_DISPLAY_MODE = 'swap'\n\n// Font size breakpoints for responsive display\nexport const FONT_SIZE_SMALL_TEXT_THRESHOLD = 10\nexport const FONT_SIZE_MEDIUM_TEXT_THRESHOLD = 20\nexport const FONT_SIZE_SMALL = '10px'\nexport const FONT_SIZE_MEDIUM = '12px'\n\n// SVG viewer defaults\nexport const SVG_INITIAL_ZOOM = 1\nexport const SVG_INITIAL_PAN_X = 0\nexport const SVG_INITIAL_PAN_Y = 0\nexport const SVG_LEGEND_WIDTH = 128\nexport const SVG_LEGEND_HEIGHT = 40\nexport const SVG_MINI_HEIGHT = 32\nexport const SVG_PREVIEW_SIZE = 24\n\n// URL Sync Configuration\nexport const URL_SYNC_DEBOUNCE_MS = 500 // Debounce delay for URL updates\nexport const URL_SYNC_TIMEOUT_MS = 500 // Timeout value for URL sync operations\n\n// Default colors (stroke color for shapes)\nexport const COLOR_DEFAULT_STROKE = '#333333'\n\n// Download defaults\nexport const DEFAULT_DOWNLOAD_RESOLUTION = 2\n\n// Success/error messages\nexport const MESSAGE_IMPORT_SUCCESS = 'Data imported successfully!'\nexport const MESSAGE_FILE_IMPORT_SUCCESS = 'File imported successfully!'\nexport const MESSAGE_TEMPLATE_LOAD_ERROR = 'Failed to load templates'\nexport const MESSAGE_INVALID_JSON = 'Please select a valid JSON file'\nexport const MESSAGE_INVALID_JSON_DROP = 'Please drop a valid JSON file'\n\n// CSS link attributes\nexport const CSS_LINK_REL = 'stylesheet'\nexport const CSS_FONT_DISPLAY_PARAM = '&display=swap'", "/**\n * Shared Template Processing Utilities\n * =====================================\n *\n * Core template processing logic shared between main app and Service Worker.\n * Extracts shape\u2192path conversion and coordinate resolution logic.\n */\n\nimport { resolvePosition, resolveLinePosition, type ViewBox } from './svg'\nimport type {\n  TemplateShapeLayer,\n  ProcessedTemplateLayer,\n  YamlTemplate\n} from '../types/template-types'\nimport {\n  DEFAULT_VIEWBOX_WIDTH,\n  DEFAULT_VIEWBOX_HEIGHT\n} from '../config/constants'\n\n/**\n * Convert YAML template layers to processed template layers\n * Works in both main app and Service Worker contexts\n *\n * @param yamlTemplate - Raw YAML template\n * @param svgContentLoader - Optional function to load SVG content (not available in SW)\n * @returns Array of processed template layers\n */\nexport async function processTemplateLayers(\n  yamlTemplate: YamlTemplate,\n  svgContentLoader?: (svgId: string) => Promise<string | null>\n): Promise<ProcessedTemplateLayer[]> {\n  const viewBox = yamlTemplate.width && yamlTemplate.height\n    ? {\n        x: 0,\n        y: 0,\n        width: yamlTemplate.width,\n        height: yamlTemplate.height\n      }\n    : yamlTemplate.viewBox\n      ? yamlTemplate.viewBox\n      : {\n          x: 0,\n          y: 0,\n          width: DEFAULT_VIEWBOX_WIDTH,\n          height: DEFAULT_VIEWBOX_HEIGHT\n        }\n\n  const layers: ProcessedTemplateLayer[] = []\n\n  for (const layer of yamlTemplate.layers) {\n    if (layer.type === 'shape') {\n      layers.push(processShapeLayer(layer, viewBox))\n    } else if (layer.type === 'text') {\n      layers.push(processTextLayer(layer, viewBox))\n    } else if (layer.type === 'svgImage') {\n      layers.push(await processSvgImageLayer(layer, viewBox, svgContentLoader))\n    }\n  }\n\n  return layers\n}\n\n/**\n * Process shape layer: resolve coordinates, convert to path\n * PROPERTY NORMALIZATION: Maps YAML 'fill' \u2192 'fillColor', 'stroke' \u2192 'strokeColor'\n */\nfunction processShapeLayer(\n  layer: TemplateShapeLayer,\n  viewBox: ViewBox\n): ProcessedTemplateLayer {\n  const {\n    id, subtype, position, width, height, rx, ry, points,\n    fill, stroke, strokeWidth, strokeLinejoin, opacity,\n    rotation, scale, clip, clipPath,\n    ...otherProps\n  } = layer\n\n  const resolvedPosition = resolvePosition(\n    position as { x: number | string; y: number | string },\n    viewBox\n  )\n\n  const path = convertShapeLayerToPath(layer, viewBox)\n\n  return {\n    id,\n    type: 'shape',\n    subtype,\n    position: resolvedPosition,\n    width,\n    height,\n    rx,\n    ry,\n    points,\n    // NORMALIZE: Map YAML properties to standardized names\n    fillColor: fill,       // Map 'fill' \u2192 'fillColor'\n    strokeColor: stroke,   // Map 'stroke' \u2192 'strokeColor'\n    strokeWidth,\n    strokeLinejoin,\n    opacity,\n    ...(rotation !== undefined && { rotation }),\n    ...(scale !== undefined && { scale }),\n    ...(clip !== undefined && { clip }),\n    ...(clipPath !== undefined && { clipPath }),\n    path,\n    ...otherProps\n  } as ProcessedTemplateLayer\n}\n\n/**\n * Process text layer: resolve coordinates\n */\nfunction processTextLayer(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  layer: any,\n  viewBox: ViewBox\n): ProcessedTemplateLayer {\n  const {\n    id, position, label, placeholder,\n    fontFamily, fontColor, fontSize, fontWeight, maxLength,\n    rotation, clip, clipPath, opacity,\n    default: defaultText,\n    ...otherProps\n  } = layer\n\n  const resolvedPosition = resolvePosition(\n    position as { x: number | string; y: number | string },\n    viewBox\n  )\n\n  return {\n    id,\n    type: 'text',\n    position: resolvedPosition,\n    text: defaultText,\n    label,\n    placeholder,\n    maxLength,\n    fontFamily,\n    fontColor,\n    fontSize,\n    fontWeight,\n    ...(rotation !== undefined && { rotation }),\n    ...(clip !== undefined && { clip }),\n    ...(clipPath !== undefined && { clipPath }),\n    ...(opacity !== undefined && { opacity }),\n    ...otherProps\n  } as ProcessedTemplateLayer\n}\n\n/**\n * Process SVG image layer: preserve position strings, optionally load content\n * PROPERTY NORMALIZATION: Maps YAML 'fill' \u2192 'color', 'stroke' \u2192 'strokeColor'\n */\nasync function processSvgImageLayer(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  layer: any,\n  viewBox: ViewBox,\n  svgContentLoader?: (svgId: string) => Promise<string | null>\n): Promise<ProcessedTemplateLayer> {\n  const {\n    id, position, width, height,\n    fill, stroke, strokeWidth, strokeLinejoin, opacity,\n    scale, rotation, clip, clipPath,\n    svgId, svgContent: layerSvgContent,\n    ...otherProps\n  } = layer\n\n  // Preserve original position strings for center-based positioning\n  const originalPosition = position as { x: number | string; y: number | string }\n\n  let svgContent = layerSvgContent ?? ''\n  if (svgId && !svgContent && svgContentLoader) {\n    const loadedContent = await svgContentLoader(svgId)\n    svgContent = loadedContent ?? ''\n  }\n\n  return {\n    id,\n    type: 'svgImage',\n    position: originalPosition,\n    svgImageId: svgId,\n    svgContent,\n    width,\n    height,\n    // NORMALIZE: Map YAML properties to standardized names\n    color: fill,            // Map 'fill' \u2192 'color' (svgImage uses 'color' not 'fillColor')\n    strokeColor: stroke,    // Map 'stroke' \u2192 'strokeColor'\n    strokeWidth,\n    strokeLinejoin,\n    opacity,\n    ...(scale !== undefined && { scale }),\n    ...(rotation !== undefined && { rotation }),\n    ...(clip !== undefined && { clip }),\n    ...(clipPath !== undefined && { clipPath }),\n    ...otherProps\n  } as ProcessedTemplateLayer\n}\n\n/**\n * Convert shape layer to SVG path\n * Handles path, rect, circle, ellipse, polygon, line subtypes\n * For path subtype, preserves the original path data (used for textPath references)\n */\nexport function convertShapeLayerToPath(\n  layer: TemplateShapeLayer,\n  viewBox: ViewBox\n): string {\n  // Handle path subtype - use the path as-is (for textPath references)\n  if (layer.subtype === 'path') {\n    // Access path using runtime structure (differs from TypeScript types)\n    const pathData = (layer as unknown as { path?: string }).path\n    return pathData ?? ''\n  }\n\n  if (layer.subtype === 'line') {\n    const linePos = layer.position as { x1: number | string; y1: number | string; x2: number | string; y2: number | string }\n    const resolvedPos = resolveLinePosition(linePos, viewBox)\n    return `M${resolvedPos.x1},${resolvedPos.y1} L${resolvedPos.x2},${resolvedPos.y2}`\n  }\n\n  const pos = resolvePosition(layer.position as { x: number | string; y: number | string }, viewBox)\n\n  switch (layer.subtype) {\n    case 'rect': {\n      if (!layer.width || !layer.height) return ''\n\n      const width = layer.width\n      const height = layer.height\n      const rx = layer.rx\n      const ry = layer.ry\n      const x = pos.x - width/2\n      const y = pos.y - height/2\n\n      if (rx && ry && (rx > 0 || ry > 0)) {\n        return `M${x + rx},${y} L${x + width - rx},${y} Q${x + width},${y} ${x + width},${y + ry} L${x + width},${y + height - ry} Q${x + width},${y + height} ${x + width - rx},${y + height} L${x + rx},${y + height} Q${x},${y + height} ${x},${y + height - ry} L${x},${y + ry} Q${x},${y} ${x + rx},${y} Z`\n      } else {\n        return `M${x},${y} L${x + width},${y} L${x + width},${y + height} L${x},${y + height} Z`\n      }\n    }\n\n    case 'circle': {\n      if (!layer.width) return ''\n      const radius = layer.width / 2\n      return `M${pos.x - radius},${pos.y} A${radius},${radius} 0 1,0 ${pos.x + radius},${pos.y} A${radius},${radius} 0 1,0 ${pos.x - radius},${pos.y} Z`\n    }\n\n    case 'ellipse': {\n      if (!layer.width || !layer.height) return ''\n      const rWidth = layer.width / 2\n      const rHeight = layer.height / 2\n      return `M${pos.x - rWidth},${pos.y} A${rWidth},${rHeight} 0 1,0 ${pos.x + rWidth},${pos.y} A${rWidth},${rHeight} 0 1,0 ${pos.x - rWidth},${pos.y} Z`\n    }\n\n    case 'polygon': {\n      if (layer.points) {\n        // Points are absolute coordinates within viewBox\n        const pointPairs = layer.points.split(' ')\n        const absolutePoints = pointPairs.map(pair => {\n          const [x, y] = pair.split(',').map(Number)\n          return `${x},${y}`\n        })\n        return `M${absolutePoints.join(' L')} Z`\n      }\n      return ''\n    }\n\n    default: {\n      // Unknown subtype - no default shape\n      return ''\n    }\n  }\n}\n", "/**\n * Service Worker Template Loader\n * ==============================\n *\n * Loads templates in Service Worker context using eager glob imports.\n * Uses shared processing logic from template-processing.ts for consistency.\n */\n\nimport yaml from 'js-yaml'\nimport type { SimpleTemplate, YamlTemplate } from '../types/template-types'\nimport { logger } from '../utils/logger'\nimport { processTemplateLayers } from '../utils/template-processing'\n\n// Eagerly import all templates using Vite glob (auto-discovers new templates)\nconst templateModules = import.meta.glob('../../templates/*.yaml', {\n  query: '?raw',\n  import: 'default',\n  eager: true\n})\n\n// Build template map from glob results\nconst templateYamlMap: Record<string, string> = Object.entries(templateModules).reduce(\n  (acc, [path, content]) => {\n    const filename = path.split('/').pop()?.replace('.yaml', '')\n    if (filename) {\n      acc[filename] = content as string\n    }\n    return acc\n  },\n  {} as Record<string, string>\n)\n\n/**\n * Parse template from YAML content\n * Uses shared processing logic for shape\u2192path conversion and coordinate resolution\n * NOTE: Does not load SVG content (svgContent should be provided in URL state)\n */\nasync function parseTemplate(templateId: string, yamlContent: string): Promise<SimpleTemplate> {\n  const yamlTemplate = yaml.load(yamlContent) as YamlTemplate\n\n  // Calculate viewBox (matches main template-loader.ts logic)\n  const viewBox = yamlTemplate.width && yamlTemplate.height\n    ? {\n        x: 0,\n        y: 0,\n        width: yamlTemplate.width,\n        height: yamlTemplate.height\n      }\n    : yamlTemplate.viewBox || { x: 0, y: 0, width: 400, height: 400 }\n\n  // Process layers using shared utility (WITHOUT SVG content loader)\n  // SVG content should be pre-loaded and included in URL state\n  const layers = await processTemplateLayers(yamlTemplate)\n\n  return {\n    id: yamlTemplate.id,\n    name: yamlTemplate.name,\n    description: yamlTemplate.description,\n    width: yamlTemplate.width ?? viewBox.width,\n    height: yamlTemplate.height ?? viewBox.height,\n    viewBox,\n    layers\n  }\n}\n\n/**\n * Load template by ID in Service Worker context\n */\nexport async function loadTemplate(templateId: string): Promise<SimpleTemplate | null> {\n  const yamlContent = templateYamlMap[templateId]\n  if (!yamlContent) {\n    return null\n  }\n\n  try {\n    return await parseTemplate(templateId, yamlContent)\n  } catch (error) {\n    logger.error('Failed to load template:', templateId, error)\n    return null\n  }\n}\n", "/**\n * Layer Positioning Utilities\n *\n * SINGLE function for percentage resolution - center-based positioning\n * NO other positioning functions allowed\n */\n\n/**\n * Resolve layer position from percentage or absolute value to absolute coordinates\n * Returns the CENTER point of the element (center-based positioning)\n *\n * @param value - Position value (percentage string like \"50%\" or absolute number)\n * @param dimension - Template dimension (width or height)\n * @returns Absolute coordinate representing the center of the element\n */\nexport function resolveLayerPosition(\n  value: number | string | undefined,\n  dimension: number\n): number {\n  if (value === undefined) return dimension / 2\n\n  if (typeof value === 'string' && value.endsWith('%')) {\n    return (parseFloat(value) / 100) * dimension\n  }\n\n  return value as number\n}", "/**\n * Mask and TextPath Helpers\n *\n * Extract and generate mask and textPath definitions from template layers\n */\n\nimport type { ProcessedTemplateLayer, FlatLayerData } from '../types/template-types'\n\nexport interface MaskDefinition {\n  id: string\n  path: string\n}\n\nexport interface TextPathDefinition {\n  id: string\n  pathData: string\n}\n\n/**\n * Generate mask definitions from shape layers\n * These go in the <defs> section of the SVG\n * Note: Masks use the same coordinate space as shapes (already positioned)\n * Excludes path layers (subtype='path') which are used for textPath references\n */\nexport function generateMaskDefinitions(\n  layers: ProcessedTemplateLayer[],\n  _templateWidth: number,\n  _templateHeight: number\n): MaskDefinition[] {\n  const definitions: MaskDefinition[] = []\n\n  for (const layer of layers) {\n    if (layer.type === 'shape') {\n      // Skip path layers - these are for textPath references, not masks\n      const subtype = (layer as unknown as { subtype?: string }).subtype\n      if (subtype === 'path') continue\n\n      // Access path directly on layer (runtime structure differs from TypeScript interface)\n      const path = (layer as unknown as { path?: string }).path\n      if (!path) continue\n\n      definitions.push({\n        id: layer.id,\n        path\n      })\n    }\n  }\n\n  return definitions\n}\n\n/**\n * Generate textPath path definitions from shape layers\n * These go in the <defs> section of the SVG\n * Only includes path layers (subtype='path') that are referenced by text layers\n */\nexport function generateTextPathDefinitions(\n  layers: ProcessedTemplateLayer[]\n): TextPathDefinition[] {\n  const definitions: TextPathDefinition[] = []\n\n  const textPathReferences = new Set<string>()\n\n  for (const layer of layers) {\n    if (layer.type === 'text') {\n      const flatLayer = layer as unknown as FlatLayerData\n      if (flatLayer.textPath) {\n        textPathReferences.add(flatLayer.textPath)\n      }\n    }\n  }\n\n  for (const layer of layers) {\n    if (layer.type === 'shape') {\n      // Access path data using runtime structure (differs from TypeScript types)\n      const subtype = (layer as unknown as { subtype?: string }).subtype\n      const path = (layer as unknown as { path?: string }).path\n\n      if (subtype === 'path' && textPathReferences.has(layer.id) && path) {\n        definitions.push({\n          id: layer.id,\n          pathData: path\n        })\n      }\n    }\n  }\n\n  return definitions\n}", "/**\n * SVG Transform Utilities\n * ======================\n *\n * Pure TypeScript functions for SVG transform calculations.\n * Extracted from Svg.vue to improve separation of concerns.\n */\n\nimport type { Point } from '../types/svg-types'\nimport type { ProcessedTemplateLayer, FlatLayerData, SimpleTemplate } from '../types/template-types'\nimport { resolveLayerPosition } from './layer-positioning'\n\n/**\n * Calculate scaled centroid coordinates for SVG images\n * Converts transform origin from viewBox space to template space\n *\n * @param svgContent - SVG content string with viewBox attribute\n * @param templateWidth - Template width in template coordinates\n * @param templateHeight - Template height in template coordinates\n * @param transformOrigin - Transform origin in viewBox coordinates\n * @returns Scaled transform origin in template space\n */\nexport function calculateScaledTransformOrigin(\n  svgContent: string,\n  templateWidth: number,\n  templateHeight: number,\n  transformOrigin: Point\n): Point {\n  // Extract viewBox from SVG content\n  const viewBoxMatch = svgContent.match(/viewBox\\s*=\\s*[\"']([^\"']*)[\"']/i)\n\n  let scaledOriginX = transformOrigin.x\n  let scaledOriginY = transformOrigin.y\n\n  if (viewBoxMatch) {\n    const viewBoxValues = viewBoxMatch[1].split(/\\s+/).map(Number)\n    if (viewBoxValues.length === 4) {\n      const [, , viewBoxWidth, viewBoxHeight] = viewBoxValues\n\n      // Calculate scale ratio from viewBox to template dimensions\n      const scaleX = templateWidth / viewBoxWidth\n      const scaleY = templateHeight / viewBoxHeight\n\n      // Scale transform origin coordinates to template space\n      scaledOriginX = transformOrigin.x * scaleX\n      scaledOriginY = transformOrigin.y * scaleY\n    }\n  }\n\n  return { x: scaledOriginX, y: scaledOriginY }\n}\n\n/**\n * Process SVG content to apply rendering attributes\n * Adds width/height, overflow=\"visible\", and styling attributes\n *\n * @param svgContent - Original SVG content string\n * @param templateWidth - Optional width to set on SVG element\n * @param templateHeight - Optional height to set on SVG element\n * @param clipPath - Optional clip-path URL reference\n * @param color - Optional fill color to apply\n * @param strokeColor - Optional stroke color to apply\n * @param strokeWidth - Optional stroke width to apply\n * @returns Processed SVG content with attributes applied\n */\nexport function applySvgRenderingAttributes(\n  svgContent: string,\n  templateWidth?: number,\n  templateHeight?: number,\n  clipPath?: string,\n  color?: string,\n  strokeColor?: string,\n  strokeWidth?: number,\n  strokeLinejoin?: string\n): string {\n  if (!svgContent) return ''\n\n  // Build style attributes to add/replace\n  const attributesToSet: Record<string, string> = {\n    overflow: 'visible'\n  }\n\n  // Add width and height to force scaling to template dimensions\n  if (templateWidth !== undefined) {\n    attributesToSet.width = templateWidth.toString()\n  }\n  if (templateHeight !== undefined) {\n    attributesToSet.height = templateHeight.toString()\n  }\n\n  if (clipPath) {\n    attributesToSet['clip-path'] = clipPath\n  }\n  if (color !== undefined) {\n    attributesToSet.fill = color\n  }\n  if (strokeColor !== undefined) {\n    attributesToSet.stroke = strokeColor\n  }\n  if (strokeWidth !== undefined && strokeWidth > 0) {\n    attributesToSet['stroke-width'] = strokeWidth.toString()\n  }\n  if (strokeLinejoin !== undefined) {\n    attributesToSet['stroke-linejoin'] = strokeLinejoin\n  }\n\n  // Process the SVG element\n  const processed = svgContent.replace(\n    /<svg([^>]*)>/i,\n    (match, attrs) => {\n      let updatedAttrs = attrs\n\n      // Remove existing width and height attributes\n      updatedAttrs = updatedAttrs.replace(/\\s+width\\s*=\\s*[\"'][^\"']*[\"']/gi, '')\n      updatedAttrs = updatedAttrs.replace(/\\s+height\\s*=\\s*[\"'][^\"']*[\"']/gi, '')\n\n      // Add/replace our attributes\n      Object.entries(attributesToSet).forEach(([key, value]) => {\n        // Remove existing attribute if present\n        const attrRegex = new RegExp(`\\\\s+${key}\\\\s*=\\\\s*[\"'][^\"']*[\"']`, 'gi')\n        updatedAttrs = updatedAttrs.replace(attrRegex, '')\n        // Add new attribute\n        updatedAttrs += ` ${key}=\"${value}\"`\n      })\n\n      return `<svg${updatedAttrs}>`\n    }\n  )\n\n  return processed\n}\n\n/**\n * Calculate transform structure for svgImage layers\n * Centralizes the decision logic for which transform case to use\n * Returns a structure that both Svg.vue and svg-string-generator.ts can use\n *\n * @param layerData - User-provided layer data (overrides)\n * @returns Transform case identifier and relevant data\n */\nexport function getSvgImageTransformCase(layerData: FlatLayerData | undefined): {\n  case: 'scale-with-origin' | 'scale-only' | 'rotation-only' | 'none'\n  scale?: number\n  rotation?: number\n  transformOrigin?: Point\n} {\n  // Complex transforms: scale and/or rotation with transform origin\n  // Treat undefined scale as 1 (100%) when rotation is present\n  if (layerData?.transformOrigin && (layerData?.scale !== undefined || layerData?.rotation !== undefined)) {\n    return {\n      case: 'scale-with-origin',\n      scale: layerData.scale !== undefined ? layerData.scale : 1, // Default to 1 (100%) if undefined\n      rotation: layerData.rotation,\n      transformOrigin: layerData.transformOrigin\n    }\n  }\n\n  // Scale only (without transform origin)\n  if (layerData?.scale !== undefined) {\n    return {\n      case: 'scale-only',\n      scale: layerData.scale\n    }\n  }\n\n  // Rotation only (no scale, no transform origin)\n  if (layerData?.rotation !== undefined) {\n    return {\n      case: 'rotation-only',\n      rotation: layerData.rotation\n    }\n  }\n\n  // No transforms\n  return { case: 'none' }\n}\n\n/**\n * Generate complete svgImage layer HTML with transforms\n * Used by svg-string-generator.ts for .svg URL generation\n * Ensures visual parity with Svg.vue component\n *\n * @param templateLayer - Template layer definition\n * @param layerData - User-provided layer data (overrides)\n * @param template - Template definition (for dimensions)\n * @returns Complete HTML string for svgImage layer with mask and transforms\n */\nexport function generateSvgImageHtml(\n  templateLayer: ProcessedTemplateLayer,\n  layerData: FlatLayerData | undefined,\n  template: SimpleTemplate\n): string {\n  const x = resolveLayerPosition(templateLayer.position?.x, template.width)\n  const y = resolveLayerPosition(templateLayer.position?.y, template.height)\n\n  const svgContent = layerData?.svgContent || templateLayer.svgContent\n  if (!svgContent) return ''\n\n  const width = templateLayer.width\n  const height = templateLayer.height\n\n  // Apply rendering attributes to SVG content\n  // Fallback to template defaults when layer data doesn't provide override\n  const processedSvg = applySvgRenderingAttributes(\n    svgContent,\n    width,\n    height,\n    undefined,\n    layerData?.color ?? templateLayer.color,\n    layerData?.strokeColor ?? templateLayer.strokeColor,\n    layerData?.strokeWidth ?? templateLayer.strokeWidth,\n    layerData?.strokeLinejoin ?? templateLayer.strokeLinejoin\n  )\n\n  // Check if layer has clip mask\n  const maskAttr = templateLayer.clip ? ` mask=\"url(#${templateLayer.clip})\"` : ''\n\n  // Base transform: translate to position, then center the SVG\n  const baseTransform = `translate(${x}, ${y}) translate(${-width / 2}, ${-height / 2})`\n\n  // Get transform case using shared logic\n  const transformCase = getSvgImageTransformCase(layerData)\n\n  switch (transformCase.case) {\n    case 'scale-with-origin': {\n      const origin = calculateScaledTransformOrigin(\n        svgContent,\n        width,\n        height,\n        transformCase.transformOrigin!\n      )\n\n      const rotation = transformCase.rotation !== undefined ? ` rotate(${transformCase.rotation})` : ''\n\n      return `<g${maskAttr}>\n    <g transform=\"${baseTransform}\">\n      <g transform=\"translate(${origin.x}, ${origin.y})\">\n        <g transform=\"scale(${transformCase.scale})${rotation}\">\n          <g transform=\"translate(${-origin.x}, ${-origin.y})\">\n            ${processedSvg}\n          </g>\n        </g>\n      </g>\n    </g>\n  </g>`\n    }\n\n    case 'scale-only':\n      return `<g${maskAttr}>\n    <g transform=\"${baseTransform}\">\n      <g transform=\"scale(${transformCase.scale})\">\n        ${processedSvg}\n      </g>\n    </g>\n  </g>`\n\n    case 'rotation-only':\n      return `<g${maskAttr}>\n    <g transform=\"${baseTransform}\">\n      <g transform=\"rotate(${transformCase.rotation})\">\n        ${processedSvg}\n      </g>\n    </g>\n  </g>`\n\n    case 'none':\n    default:\n      return `<g${maskAttr}>\n    <g transform=\"${baseTransform}\">\n      ${processedSvg}\n    </g>\n  </g>`\n  }\n}\n", "/**\n * UI Constants - Static data used across components\n * Pure constants with no Vue dependencies\n */\n\n// Preset colors for quick selection (used in font selector and color pickers)\n// Organized by color families for intuitive selection (35 colors total)\nexport const PRESET_COLORS = [\n  // Neutrals & Basics (8 colors)\n  '#000000', '#1f2937', '#4b5563', '#6b7280',\n  '#9ca3af', '#d1d5db', '#f3f4f6', '#ffffff',\n\n  // Reds (4 colors)\n  '#7f1d1d', '#dc2626', '#ef4444', '#fca5a5',\n\n  // Oranges (3 colors)\n  '#7c2d12', '#ea580c', '#fb923c',\n\n  // Yellows & Ambers (4 colors)\n  '#a16207', '#d97706', '#f59e0b', '#fbbf24',\n\n  // Greens (4 colors)\n  '#14532d', '#16a34a', '#22c55e', '#86efac',\n\n  // Blues (4 colors)\n  '#1e3a8a', '#2563eb', '#3b82f6', '#93c5fd',\n\n  // Purples (4 colors)\n  '#581c87', '#7c3aed', '#8b5cf6', '#c4b5fd',\n\n  // Pinks & Special (4 colors)\n  '#be185d', '#e11d48', '#ec4899', '#06b6d4'\n] as const\n\n// Special color values\nexport const COLOR_NONE = 'none' as const\nexport const COLOR_TRANSPARENT = 'transparent' as const\n\n// Common font sizes for quick selection\nexport const COMMON_FONT_SIZES = [12, 16, 20, 24, 32, 48] as const\n\n// Stroke linejoin options\nexport const STROKE_LINEJOIN_OPTIONS = [\n  { value: 'round', label: 'Round', description: 'Rounded corners at line joins' },\n  { value: 'miter', label: 'Miter', description: 'Sharp pointed corners at line joins' },\n  { value: 'bevel', label: 'Bevel', description: 'Flat corners at line joins' },\n  { value: 'arcs', label: 'Arcs', description: 'Arc corners at line joins' },\n  { value: 'miter-clip', label: 'Clip', description: 'Clipped miter corners at line joins' }\n] as const\n\n// Dominant baseline options for textPath\nexport const DOMINANT_BASELINE_OPTIONS = [\n  { value: 'auto', label: 'Auto', description: 'Automatic baseline (default)' },\n  { value: 'middle', label: 'Middle', description: 'Center text vertically on path' },\n  { value: 'central', label: 'Central', description: 'Central baseline alignment' },\n  { value: 'hanging', label: 'Hanging', description: 'Hanging baseline for Indic scripts' },\n  { value: 'alphabetic', label: 'Alpha', description: 'Alphabetic baseline' },\n  { value: 'text-top', label: 'Top', description: 'Top of text em box' },\n  { value: 'text-bottom', label: 'Bottom', description: 'Bottom of text em box' },\n  { value: 'ideographic', label: 'Ideo', description: 'Ideographic baseline for CJK' },\n  { value: 'mathematical', label: 'Math', description: 'Mathematical baseline' }\n] as const\n\n// All possible font weight options\nexport const ALL_FONT_WEIGHTS = [\n  { label: '100', value: 100 },\n  { label: '300', value: 300 },\n  { label: '400', value: 400 },\n  { label: '500', value: 500 },\n  { label: '600', value: 600 },\n  { label: '700', value: 700 },\n  { label: '800', value: 800 },\n  { label: '900', value: 900 }\n] as const\n\n// Font category color mapping\nexport const FONT_CATEGORY_COLORS: Record<string, string> = {\n  'serif': 'bg-blue-400',\n  'sans-serif': 'bg-green-400',\n  'monospace': 'bg-purple-400',\n  'display': 'bg-orange-400',\n  'handwriting': 'bg-pink-400',\n  'dingbats': 'bg-red-400'\n} as const\n\n// Default fallback color for unknown categories\nexport const DEFAULT_CATEGORY_COLOR = 'bg-gray-400' as const\n\n// Lazy loading configuration\nexport const FONT_LOADING_CONFIG = {\n  INITIAL_VISIBLE_COUNT: 20,\n  LOAD_MORE_INCREMENT: 20,\n  SCROLL_THRESHOLD: 100, // px from bottom\n  LOAD_DELAY: 100 // ms\n} as const\n\n// Textarea configuration for multi-line text input\nexport const MIN_TEXTAREA_ROWS = 1 as const\n\n// Default line height for multi-line text (1.2 = 120% of font size)\nexport const DEFAULT_LINE_HEIGHT = 1.2 as const\n\n// Viewport and centering configuration\nexport const VIEWPORT_CONFIG = {\n  MIN_CONTENT_WIDTH: 400,\n  MIN_CONTENT_HEIGHT: 300,\n  GRID_SCALE: 2.0,\n  PADDING_SCALE: 1.5\n} as const", "/**\n * Font Utilities - Pure functions for font operations\n * No Vue dependencies\n */\n\nimport type { FontConfig } from '../config/fonts'\nimport { ALL_FONT_WEIGHTS, FONT_CATEGORY_COLORS, DEFAULT_CATEGORY_COLOR } from './ui-constants'\n\n/**\n * Extract font family string from layer data\n * Handles both FontConfig objects and direct fontFamily strings\n *\n * @param layerData - Layer data that may contain font information\n * @returns Font family string or undefined if not present\n */\nexport function extractFontFamily(layerData: unknown): string | undefined {\n  if (!layerData || typeof layerData !== 'object') return undefined\n\n  const data = layerData as Record<string, unknown>\n\n  if (data.font && typeof data.font === 'object') {\n    const fontConfig = data.font as FontConfig\n    return fontConfig.family\n  }\n\n  if (typeof data.fontFamily === 'string') {\n    return data.fontFamily\n  }\n\n  return undefined\n}\n\n/**\n * Get available font weights based on selected font\n */\nexport function getAvailableFontWeights(selectedFont: FontConfig | null | undefined) {\n  if (!selectedFont?.weights?.length) {\n    return ALL_FONT_WEIGHTS.filter(w => [400, 700].includes(w.value)) // Default fallback\n  }\n\n  return ALL_FONT_WEIGHTS.filter(weight =>\n    selectedFont.weights.includes(weight.value)\n  )\n}\n\n/**\n * Get category color for font category indicators\n */\nexport function getFontCategoryColor(category: string): string {\n  return FONT_CATEGORY_COLORS[category] ?? DEFAULT_CATEGORY_COLOR\n}\n\n/**\n * Filter fonts by category and search query\n */\nexport function filterFonts(\n  fonts: FontConfig[],\n  searchQuery: string,\n  selectedCategory: string | null\n): FontConfig[] {\n  let filteredFonts = fonts\n\n  if (selectedCategory) {\n    filteredFonts = filteredFonts.filter(font => font.category === selectedCategory)\n  }\n\n  if (searchQuery.trim()) {\n    const query = searchQuery.toLowerCase().trim()\n    filteredFonts = filteredFonts.filter(font =>\n      font.name.toLowerCase().includes(query) ||\n      font.category.toLowerCase().includes(query)\n    )\n  }\n\n  const seen = new Set<string>()\n  filteredFonts = filteredFonts.filter(font => {\n    if (seen.has(font.name)) {\n      return false\n    }\n    seen.add(font.name)\n    return true\n  })\n\n  return filteredFonts\n}\n\n/**\n * Calculate visible fonts for lazy loading\n */\nexport function getVisibleFonts(fonts: FontConfig[], visibleCount: number): FontConfig[] {\n  return fonts.slice(0, visibleCount)\n}\n\n/**\n * Check if should load more fonts based on scroll position\n */\nexport function shouldLoadMoreFonts(\n  container: HTMLElement,\n  visibleCount: number,\n  totalCount: number,\n  scrollThreshold = 100\n): boolean {\n  const isNearBottom = container.scrollHeight - container.scrollTop - container.clientHeight < scrollThreshold\n  return isNearBottom && visibleCount < totalCount\n}\n\n/**\n * Calculate next visible count for lazy loading\n */\nexport function calculateNextVisibleCount(\n  currentCount: number,\n  increment: number,\n  maxCount: number\n): number {\n  return Math.min(currentCount + increment, maxCount)\n}", "/**\n * Multi-line text utilities for SVG rendering\n *\n * Handles splitting text on newlines and calculating vertical offsets\n * to achieve proper centering of multi-line text blocks.\n */\n\n/**\n * Split text on newline characters\n *\n * @param text - Text string potentially containing \\n characters\n * @returns Array of text lines\n */\nexport function splitLines(text: string): string[] {\n  return text.split('\\n')\n}\n\n/**\n * Calculate dy offset for tspan element to achieve vertical centering\n *\n * For multi-line text rendered with tspan elements, we need to calculate\n * the vertical offset for each line to center the entire text block.\n *\n * The first line is offset upward (negative dy) to position the block center\n * at the text element's anchor point. Subsequent lines use positive dy to\n * space downward from the previous line.\n *\n * @param index - Line index (0-based)\n * @param totalLines - Total number of lines in the text block\n * @param fontSize - Font size in pixels\n * @param lineHeight - Line height multiplier (e.g., 1.2 = 120% of font size)\n * @returns dy offset in pixels\n *\n * @example\n * // For 3 lines with fontSize=24 and lineHeight=1.2:\n * calculateLineDy(0, 3, 24, 1.2) // -28.8 (offset first line up)\n * calculateLineDy(1, 3, 24, 1.2) // 28.8 (space down from line 1)\n * calculateLineDy(2, 3, 24, 1.2) // 28.8 (space down from line 2)\n */\nexport function calculateLineDy(\n  index: number,\n  totalLines: number,\n  fontSize: number,\n  lineHeight: number\n): number {\n  if (index === 0) {\n    // First line: offset upward to center the entire block\n    // Formula: -(totalLines - 1) * lineSpacing / 2\n    const lineSpacing = fontSize * lineHeight\n    return -(totalLines - 1) * lineSpacing / 2\n  }\n  // Subsequent lines: offset downward by line spacing\n  return fontSize * lineHeight\n}\n", "/**\n * Unified SVG String Generator\n * ============================\n *\n * Generates SVG strings from template data, reusing existing utilities.\n * Used by both Service Worker (for .svg URLs) and main app (for exports).\n * Ensures visual parity with Svg.vue component.\n */\n\nimport type { SimpleTemplate, FlatLayerData, ProcessedTemplateLayer } from '../types/template-types'\nimport { resolveLayerPosition } from './layer-positioning'\nimport { generateMaskDefinitions, generateTextPathDefinitions } from './mask-utils'\nimport {\n  generateSvgImageHtml\n} from './svg-transforms'\nimport { extractFontFamily } from './font-utils'\nimport { splitLines, calculateLineDy } from './text-multiline'\nimport { DEFAULT_LINE_HEIGHT } from './ui-constants'\n\n/**\n * Generate complete SVG string from template and layer data\n * Matches the exact rendering logic of Svg.vue component\n * Includes Google Fonts imports for standalone SVG viewing\n *\n * @param template - Template definition with layers\n * @param layers - Layer data to render\n * @returns Complete SVG string\n */\nexport function generateSvgString(\n  template: SimpleTemplate,\n  layers: FlatLayerData[]\n): string {\n  const { width, height } = template\n\n  // PHASE 1: Collect unique font families from all text layers\n  const fontFamilies = new Set<string>()\n  for (const templateLayer of template.layers) {\n    if (templateLayer.type === 'text') {\n      const layerData = layers.find(l => l.id === templateLayer.id)\n      const fontFamily = extractFontFamily(layerData) ?? templateLayer.fontFamily\n      if (fontFamily) {\n        fontFamilies.add(fontFamily)\n      }\n    }\n  }\n\n  // PHASE 2: Generate font imports for Google Fonts\n  const fontImports = Array.from(fontFamilies).map(family => {\n    const encodedFamily = family.replace(/ /g, '+')\n    return `@import url('https://fonts.googleapis.com/css2?family=${encodedFamily}:wght@400;600;700&amp;display=swap');`\n  }).join('\\n    ')\n\n  // PHASE 3: Generate mask definitions\n  const maskDefs = generateMaskDefinitions(template.layers, width, height)\n\n  // PHASE 3.5: Generate textPath path definitions\n  const textPathDefs = generateTextPathDefinitions(template.layers)\n\n  // PHASE 4: Build defs section with fonts, masks, and textPath paths\n  const defsSection = (fontImports || maskDefs.length > 0 || textPathDefs.length > 0)\n    ? `  <defs>\\n${fontImports ? `    <style>\\n      ${fontImports}\\n    </style>\\n` : ''}${maskDefs.length > 0 ? `${maskDefs.map(mask =>\n      `    <mask id=\"${mask.id}\">\n      <path d=\"${mask.path}\" fill=\"white\" />\n    </mask>`\n    ).join('\\n')  }\\n` : ''}${textPathDefs.length > 0 ? `${textPathDefs.map(pathDef =>\n      `    <path id=\"${pathDef.id}\" d=\"${pathDef.pathData}\" />`\n    ).join('\\n')  }\\n` : ''}  </defs>\\n`\n    : ''\n\n  // PHASE 5: Generate layer content\n  const layerElements: string[] = []\n\n  for (const templateLayer of template.layers) {\n    const layerData = layers.find(l => l.id === templateLayer.id)\n    const element = generateLayerElement(templateLayer, layerData, template)\n    if (element) {\n      layerElements.push(element)\n    }\n  }\n\n  // Assemble final SVG\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\">\n${defsSection}  ${layerElements.join('\\n  ')}\n</svg>`\n}\n\n/**\n * Generate SVG element for a single layer\n * Matches rendering logic in Svg.vue template\n */\nfunction generateLayerElement(\n  templateLayer: ProcessedTemplateLayer,\n  layerData: FlatLayerData | undefined,\n  template: SimpleTemplate\n): string | null {\n  if (templateLayer.type === 'shape') {\n    return generateShapeElement(templateLayer, layerData)\n  } else if (templateLayer.type === 'text') {\n    return generateTextElement(templateLayer, layerData, template)\n  } else if (templateLayer.type === 'svgImage') {\n    return generateSvgImageElement(templateLayer, layerData, template)\n  }\n\n  return null\n}\n\n/**\n * Generate shape layer element\n * Renders all shapes including path layers with visual styling\n */\nfunction generateShapeElement(\n  templateLayer: ProcessedTemplateLayer,\n  layerData: FlatLayerData | undefined\n): string {\n  const path = (templateLayer as unknown as { path?: string }).path\n  if (!path) return ''\n\n  // Use normalized property names (fillColor, strokeColor)\n  const fill = layerData?.fillColor ?? templateLayer.fillColor\n  const stroke = layerData?.strokeColor ?? templateLayer.strokeColor\n  const strokeWidth = layerData?.strokeWidth ?? templateLayer.strokeWidth\n  const strokeLinejoin = layerData?.strokeLinejoin\n\n  // Skip path layers with no visual styling (reference-only paths for textPath)\n  // Treat \"none\" the same as undefined - both mean \"don't render this visual property\"\n  const hasFill = fill !== undefined && fill !== 'none'\n  const hasStroke = stroke !== undefined && stroke !== 'none'\n  if (!hasFill && !hasStroke) return ''\n\n  const attrs: string[] = [`d=\"${path}\"`]\n  if (fill !== undefined) attrs.push(`fill=\"${fill}\"`)\n  if (stroke !== undefined) attrs.push(`stroke=\"${stroke}\"`)\n  if (strokeWidth !== undefined) attrs.push(`stroke-width=\"${strokeWidth}\"`)\n  if (strokeLinejoin !== undefined) attrs.push(`stroke-linejoin=\"${strokeLinejoin}\"`)\n\n  return `<g>\n    <path ${attrs.join(' ')} />\n  </g>`\n}\n\n/**\n * Generate text layer element with proper center-based positioning\n * Supports both regular text and textPath (curved text along paths)\n */\nfunction generateTextElement(\n  templateLayer: ProcessedTemplateLayer,\n  layerData: FlatLayerData | undefined,\n  template: SimpleTemplate\n): string {\n  const text = layerData?.text ?? templateLayer.text ?? ''\n  const fontFamily = extractFontFamily(layerData) ?? templateLayer.fontFamily\n  const fontSize = layerData?.fontSize ?? templateLayer.fontSize\n  const fontWeight = layerData?.fontWeight ?? templateLayer.fontWeight\n  const fill = layerData?.fontColor ?? layerData?.textColor ?? templateLayer.fontColor\n  const stroke = layerData?.strokeWidth !== undefined && layerData.strokeWidth > 0\n    ? (layerData?.strokeColor ?? templateLayer.strokeColor)\n    : undefined\n  const strokeWidth = layerData?.strokeWidth !== undefined && layerData.strokeWidth > 0\n    ? layerData.strokeWidth\n    : undefined\n  const strokeOpacity = layerData?.strokeOpacity\n  const strokeLinejoin = layerData?.strokeLinejoin\n\n  // Check if this text uses textPath (curved text along a path) or multiline\n  const flatLayer = templateLayer as unknown as FlatLayerData\n  const textPath = flatLayer.textPath\n  const multiline = flatLayer.multiline\n\n  // Build text attributes\n  const textAttrs: string[] = []\n  // Remove any existing quotes from fontFamily to prevent double-quoting\n  if (fontFamily !== undefined) {\n    const cleanFontFamily = fontFamily.replace(/^[\"']|[\"']$/g, '')\n    textAttrs.push(`font-family=\"${cleanFontFamily}\"`)\n  }\n  if (fontSize !== undefined) textAttrs.push(`font-size=\"${fontSize}\"`)\n  if (fontWeight !== undefined) textAttrs.push(`font-weight=\"${fontWeight}\"`)\n  if (fill !== undefined) textAttrs.push(`fill=\"${fill}\"`)\n  if (stroke !== undefined) textAttrs.push(`stroke=\"${stroke}\"`)\n  if (strokeWidth !== undefined) textAttrs.push(`stroke-width=\"${strokeWidth}\"`)\n  if (strokeOpacity !== undefined) textAttrs.push(`stroke-opacity=\"${strokeOpacity}\"`)\n  if (strokeLinejoin !== undefined) textAttrs.push(`stroke-linejoin=\"${strokeLinejoin}\"`)\n\n  // Check if layer has clip mask\n  const maskAttr = templateLayer.clip ? ` mask=\"url(#${templateLayer.clip})\"` : ''\n\n  // TEXT WITH TEXTPATH (curved text along a path)\n  if (textPath) {\n    const startOffset = layerData?.startOffset ?? flatLayer.startOffset ?? '50%'\n    const dy = layerData?.dy ?? flatLayer.dy\n    const dominantBaseline = layerData?.dominantBaseline ?? flatLayer.dominantBaseline\n\n    const textPathTextAttrs = [\n      'text-anchor=\"middle\"',\n      ...textAttrs\n    ]\n    if (dominantBaseline !== undefined) {\n      textPathTextAttrs.push(`dominant-baseline=\"${dominantBaseline}\"`)\n    }\n\n    return `<g${maskAttr}>\n    <text ${textPathTextAttrs.join(' ')}>\n      <textPath href=\"#${textPath}\" startOffset=\"${startOffset}\">\n        ${dy !== undefined ? `<tspan dy=\"${dy}\">` : ''}${escapeXml(text)}${dy !== undefined ? `</tspan>` : ''}\n      </textPath>\n    </text>\n  </g>`\n  }\n\n  // MULTI-LINE TEXT (tspan-based line breaks)\n  if (multiline && !textPath) {\n    const lines = splitLines(text)\n    const lineHeight = layerData?.lineHeight ?? flatLayer.lineHeight ?? DEFAULT_LINE_HEIGHT\n\n    const x = resolveLayerPosition(templateLayer.position?.x, template.width)\n    const y = resolveLayerPosition(templateLayer.position?.y, template.height)\n    const rotation = layerData?.rotation ?? templateLayer.rotation\n\n    let transform = `translate(${x}, ${y})`\n    if (rotation !== undefined) {\n      transform += ` rotate(${rotation})`\n    }\n\n    const tspans = lines.map((line, i) => {\n      const dy = calculateLineDy(i, lines.length, fontSize ?? 16, lineHeight)\n      return `<tspan x=\"0\" dy=\"${dy}\">${escapeXml(line)}</tspan>`\n    }).join('\\n        ')\n\n    const multilineTextAttrs = [\n      'text-anchor=\"middle\"',\n      'dominant-baseline=\"central\"',\n      ...textAttrs\n    ]\n\n    return `<g${maskAttr}>\n    <g transform=\"${transform}\">\n      <text ${multilineTextAttrs.join(' ')}>\n        ${tspans}\n      </text>\n    </g>\n  </g>`\n  }\n\n  // REGULAR TEXT (single-line with transform positioning)\n  const x = resolveLayerPosition(templateLayer.position?.x, template.width)\n  const y = resolveLayerPosition(templateLayer.position?.y, template.height)\n  const rotation = layerData?.rotation ?? templateLayer.rotation\n\n  // Build transform\n  let transform = `translate(${x}, ${y})`\n  if (rotation !== undefined) {\n    transform += ` rotate(${rotation})`\n  }\n\n  const regularTextAttrs = [\n    'text-anchor=\"middle\"',\n    'dominant-baseline=\"central\"',\n    ...textAttrs\n  ]\n\n  return `<g${maskAttr}>\n    <g transform=\"${transform}\">\n      <text ${regularTextAttrs.join(' ')}>${escapeXml(text)}</text>\n    </g>\n  </g>`\n}\n\n/**\n * Generate svgImage layer element with complex transforms\n * Uses shared logic from svg-transforms.ts to ensure visual parity with Svg.vue\n */\nfunction generateSvgImageElement(\n  templateLayer: ProcessedTemplateLayer,\n  layerData: FlatLayerData | undefined,\n  template: SimpleTemplate\n): string {\n  return generateSvgImageHtml(templateLayer, layerData, template)\n}\n\n/**\n * Escape XML special characters in text content\n */\nfunction escapeXml(text: string): string {\n  return text\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;')\n}\n", "/**\n * URL Encoding System\n * Compact JSON-based encoding for shareable URLs\n */\n\nimport type { AppState } from '../types/app-state'\nimport { logger } from './logger'\n\n/**\n * Encoding format version - increment on breaking changes\n * v2: Modern encoding with TextEncoder/TextDecoder\n */\nconst ENCODING_VERSION = 2\n\n/**\n * Template IDs are NOT compressed for URL stability\n * Adding new templates must never break existing URLs\n */\n\nexport const COLOR_PALETTE = [\n  '#000000', '#ffffff', '#ff0000', '#00ff00', '#0000ff', '#ffff00',\n  '#ff00ff', '#00ffff', '#808080', '#800000', '#008000', '#000080',\n  '#800080', '#808000', '#c0c0c0', '#404040',\n  '#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5', '#2196f3',\n  '#03a9f4', '#00bcd4', '#009688', '#4caf50', '#8bc34a', '#cddc39',\n  '#ffeb3b', '#ffc107', '#ff9800', '#ff5722',\n  '#1f2937', '#374151', '#6b7280', '#9ca3af', '#d1d5db', '#e5e7eb',\n  '#f3f4f6', '#f9fafb', '#ef4444', '#f97316', '#f59e0b', '#eab308',\n  '#84cc16', '#22c55e', '#10b981', '#06b6d4',\n  '#8b5cf6', '#a855f7', '#c084fc', '#e879f9', '#f0abfc', '#fbbf24',\n  '#f59e0b', '#d97706', '#92400e', '#78350f', '#451a03', '#7c2d12',\n  '#dc2626', '#b91c1c', '#991b1b', '#7f1d1d'\n] as const\n\nexport const FONT_MAP = {\n  'Inter': 'A',\n  'Arial': 'B',\n  'Helvetica': 'C',\n  'Roboto': 'D',\n  'Open Sans': 'E',\n  'Poppins': 'F',\n  'Montserrat': 'G',\n  'Oswald': 'H',\n  'Lato': 'I',\n  'Nunito': 'J',\n  'Source Sans Pro': 'K',\n  'Raleway': 'L',\n  'Ubuntu': 'M',\n  'Playfair Display': 'N',\n  'Merriweather': 'O',\n  'PT Sans': 'P',\n  'Bebas Neue': 'Q',\n  'Dancing Script': 'R',\n  'Pacifico': 'S',\n  'JetBrains Mono': 'T',\n  'Source Code Pro': 'U',\n  'Courier New': 'V',\n  'Georgia': 'W',\n  'Times New Roman': 'X',\n  'Verdana': 'Y',\n  'Tahoma': 'Z'\n} as const\n\nexport const REVERSE_FONT_MAP = Object.fromEntries(\n  Object.entries(FONT_MAP).map(([font, char]) => [char, font])\n) as Record<string, string>\n\nconst PROP_MAP = {\n  selectedTemplateId: 't',\n  layers: 'l',\n  id: 'i',\n  type: 'y',\n  text: 'x',\n  fontSize: 's',\n  fontWeight: 'w',\n  fontColor: 'c',\n  fontFamily: 'f',\n  textPath: 'p',\n  startOffset: 'q',\n  dy: 'd',\n  dominantBaseline: 'b',\n  fillColor: 'F',\n  strokeColor: 'C',\n  strokeWidth: 'W',\n  strokeOpacity: 'O',\n  strokeLinejoin: 'j',\n  svgImageId: 'v',\n  svgContent: 'V',\n  color: 'o',\n  rotation: 'r',\n  scale: 'a',\n  transformOrigin: 'T'\n} as const\n\nconst TYPE_MAP = {\n  text: 't',\n  shape: 's',\n  svgImage: 'i'\n} as const\n\nconst REVERSE_TYPE_MAP = Object.fromEntries(\n  Object.entries(TYPE_MAP).map(([k, v]) => [v, k])\n) as Record<string, string>\n\nfunction compressColor(hex: string): number | string {\n  const idx = COLOR_PALETTE.indexOf(hex as typeof COLOR_PALETTE[number])\n  return idx >= 0 ? idx : hex\n}\n\nfunction decompressColor(value: number | string): string {\n  return typeof value === 'number' ? COLOR_PALETTE[value] : value\n}\n\nfunction compressFont(fontFamily: string): string {\n  return (FONT_MAP as Record<string, string>)[fontFamily] || fontFamily\n}\n\nfunction decompressFont(value: string): string {\n  return REVERSE_FONT_MAP[value] || value\n}\n\nfunction compressTemplateId(templateId: string): string {\n  return templateId\n}\n\nfunction decompressTemplateId(value: string): string {\n  return value\n}\n\nfunction stringToBase64Url(str: string): string {\n  // eslint-disable-next-line no-undef\n  const utf8Bytes = new TextEncoder().encode(str)\n\n  let binaryString = ''\n  utf8Bytes.forEach(byte => {\n    binaryString += String.fromCharCode(byte)\n  })\n\n  return btoa(binaryString)\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '')\n}\n\nfunction base64UrlToString(base64url: string): string {\n  const base64 = base64url.replace(/-/g, '+').replace(/_/g, '/')\n  const padded = base64 + '='.repeat((4 - base64.length % 4) % 4)\n  const binaryString = atob(padded)\n\n  const utf8Bytes = new Uint8Array(binaryString.length)\n  for (let i = 0; i < binaryString.length; i++) {\n    utf8Bytes[i] = binaryString.charCodeAt(i)\n  }\n\n  // eslint-disable-next-line no-undef\n  return new TextDecoder().decode(utf8Bytes)\n}\n\n/**\n * Encode template state to compact URL-safe string\n * Only includes defined properties - no hardcoded defaults\n */\nexport function encodeTemplateStateCompact(state: AppState): string {\n  try {\n    const compressedTemplateId = state.selectedTemplateId ? compressTemplateId(state.selectedTemplateId) : null\n\n    const compressedLayers = Array.isArray(state.layers) ? state.layers.map(layer => {\n      const flatLayer: Record<string, unknown> = {\n        [PROP_MAP.id]: layer.id,\n        [PROP_MAP.type]: (TYPE_MAP as Record<string, string>)[layer.type] || layer.type\n      }\n\n      if (layer.text !== undefined) flatLayer[PROP_MAP.text] = layer.text\n      if (layer.fontSize !== undefined) flatLayer[PROP_MAP.fontSize] = layer.fontSize\n      if (layer.fontWeight !== undefined) flatLayer[PROP_MAP.fontWeight] = layer.fontWeight\n      if (layer.fontColor !== undefined) flatLayer[PROP_MAP.fontColor] = compressColor(layer.fontColor)\n      if (layer.font?.family !== undefined) flatLayer[PROP_MAP.fontFamily] = compressFont(layer.font.family)\n      else if ('fontFamily' in layer && layer.fontFamily !== undefined) {\n        flatLayer[PROP_MAP.fontFamily] = compressFont(layer.fontFamily as string)\n      }\n\n      if (layer.textPath !== undefined) flatLayer[PROP_MAP.textPath] = layer.textPath\n      if (layer.startOffset !== undefined) flatLayer[PROP_MAP.startOffset] = layer.startOffset\n      if (layer.dy !== undefined) flatLayer[PROP_MAP.dy] = layer.dy\n      if (layer.dominantBaseline !== undefined) flatLayer[PROP_MAP.dominantBaseline] = layer.dominantBaseline\n\n      if (layer.fillColor !== undefined) flatLayer[PROP_MAP.fillColor] = compressColor(layer.fillColor)\n      if (layer.strokeColor !== undefined) flatLayer[PROP_MAP.strokeColor] = compressColor(layer.strokeColor)\n      if (layer.strokeWidth !== undefined) flatLayer[PROP_MAP.strokeWidth] = layer.strokeWidth\n      if (layer.strokeOpacity !== undefined) flatLayer[PROP_MAP.strokeOpacity] = layer.strokeOpacity\n      if (layer.strokeLinejoin !== undefined) flatLayer[PROP_MAP.strokeLinejoin] = layer.strokeLinejoin\n\n      if (layer.svgImageId !== undefined) flatLayer[PROP_MAP.svgImageId] = layer.svgImageId\n      if (layer.svgContent !== undefined) flatLayer[PROP_MAP.svgContent] = layer.svgContent\n      if (layer.color !== undefined) flatLayer[PROP_MAP.color] = compressColor(layer.color)\n      if (layer.rotation !== undefined) flatLayer[PROP_MAP.rotation] = layer.rotation\n      if (layer.scale !== undefined) flatLayer[PROP_MAP.scale] = layer.scale\n      if (layer.transformOrigin !== undefined) flatLayer[PROP_MAP.transformOrigin] = layer.transformOrigin\n\n      return flatLayer\n    }) : []\n\n    const compressedState = {\n      v: ENCODING_VERSION,\n      [PROP_MAP.selectedTemplateId]: compressedTemplateId,\n      [PROP_MAP.layers]: compressedLayers\n    }\n\n    const jsonString = JSON.stringify(compressedState)\n    return stringToBase64Url(jsonString)\n  } catch (error) {\n    logger.warn('Failed to encode template state:', error)\n    return ''\n  }\n}\n\n/**\n * Decode template state from URL-safe string\n * Returns only encoded values - no hardcoded defaults\n */\nexport function decodeTemplateStateCompact(encoded: string): Partial<AppState> | null {\n  try {\n    if (!encoded || encoded.length < 1) return null\n\n    const jsonString = base64UrlToString(encoded)\n\n    if (!jsonString || jsonString.includes('\\ufffd') || jsonString.includes('\uFFFD')) {\n      logger.warn('Invalid encoding format detected - URL may be from older version')\n      return null\n    }\n\n    const compressedState = JSON.parse(jsonString)\n\n    if (!compressedState.v || compressedState.v !== ENCODING_VERSION) {\n      logger.warn(\n        `Encoding version mismatch: expected v${ENCODING_VERSION}, got v${compressedState.v || 'none'}. ` +\n        `This URL was created with an incompatible encoding format.`\n      )\n      return null\n    }\n\n    const compressedTemplateId = compressedState[PROP_MAP.selectedTemplateId]\n    const compressedLayers = compressedState[PROP_MAP.layers]\n\n    if (!compressedTemplateId || !Array.isArray(compressedLayers)) {\n      logger.warn('Invalid compressed state structure')\n      return null\n    }\n\n    const decompressedTemplateId = decompressTemplateId(compressedTemplateId)\n\n    const decompressedLayers = compressedLayers.map((compressedLayer: Record<string, unknown>) => {\n      const mappedLayer: Record<string, unknown> = {\n        id: compressedLayer[PROP_MAP.id],\n        type: REVERSE_TYPE_MAP[compressedLayer[PROP_MAP.type] as string] || compressedLayer[PROP_MAP.type]\n      }\n\n      if (compressedLayer[PROP_MAP.text] !== undefined) {\n        mappedLayer.text = compressedLayer[PROP_MAP.text]\n      }\n      if (compressedLayer[PROP_MAP.fontSize] !== undefined) {\n        mappedLayer.fontSize = compressedLayer[PROP_MAP.fontSize]\n      }\n      if (compressedLayer[PROP_MAP.fontWeight] !== undefined) {\n        mappedLayer.fontWeight = compressedLayer[PROP_MAP.fontWeight]\n      }\n      if (compressedLayer[PROP_MAP.fontColor] !== undefined) {\n        mappedLayer.fontColor = decompressColor(compressedLayer[PROP_MAP.fontColor] as number | string)\n      }\n      if (compressedLayer[PROP_MAP.fontFamily] !== undefined) {\n        mappedLayer.fontFamily = decompressFont(compressedLayer[PROP_MAP.fontFamily] as string)\n      }\n\n      if (compressedLayer[PROP_MAP.textPath] !== undefined) {\n        mappedLayer.textPath = compressedLayer[PROP_MAP.textPath]\n      }\n      if (compressedLayer[PROP_MAP.startOffset] !== undefined) {\n        mappedLayer.startOffset = compressedLayer[PROP_MAP.startOffset]\n      }\n      if (compressedLayer[PROP_MAP.dy] !== undefined) {\n        mappedLayer.dy = compressedLayer[PROP_MAP.dy]\n      }\n      if (compressedLayer[PROP_MAP.dominantBaseline] !== undefined) {\n        mappedLayer.dominantBaseline = compressedLayer[PROP_MAP.dominantBaseline]\n      }\n\n      if (compressedLayer[PROP_MAP.fillColor] !== undefined) {\n        mappedLayer.fillColor = decompressColor(compressedLayer[PROP_MAP.fillColor] as number | string)\n      }\n      if (compressedLayer[PROP_MAP.strokeColor] !== undefined) {\n        mappedLayer.strokeColor = decompressColor(compressedLayer[PROP_MAP.strokeColor] as number | string)\n      }\n      if (compressedLayer[PROP_MAP.strokeWidth] !== undefined) {\n        mappedLayer.strokeWidth = compressedLayer[PROP_MAP.strokeWidth]\n      }\n      if (compressedLayer[PROP_MAP.strokeOpacity] !== undefined) {\n        mappedLayer.strokeOpacity = compressedLayer[PROP_MAP.strokeOpacity]\n      }\n      if (compressedLayer[PROP_MAP.strokeLinejoin] !== undefined) {\n        mappedLayer.strokeLinejoin = compressedLayer[PROP_MAP.strokeLinejoin]\n      }\n\n      if (compressedLayer[PROP_MAP.svgImageId] !== undefined) {\n        mappedLayer.svgImageId = compressedLayer[PROP_MAP.svgImageId]\n      }\n      if (compressedLayer[PROP_MAP.svgContent] !== undefined) {\n        mappedLayer.svgContent = compressedLayer[PROP_MAP.svgContent]\n      }\n      if (compressedLayer[PROP_MAP.color] !== undefined) {\n        mappedLayer.color = decompressColor(compressedLayer[PROP_MAP.color] as number | string)\n      }\n      if (compressedLayer[PROP_MAP.rotation] !== undefined) {\n        mappedLayer.rotation = compressedLayer[PROP_MAP.rotation]\n      }\n      if (compressedLayer[PROP_MAP.scale] !== undefined) {\n        mappedLayer.scale = compressedLayer[PROP_MAP.scale]\n      }\n      if (compressedLayer[PROP_MAP.transformOrigin] !== undefined) {\n        mappedLayer.transformOrigin = compressedLayer[PROP_MAP.transformOrigin]\n      }\n\n      return mappedLayer\n    })\n\n    return {\n      selectedTemplateId: decompressedTemplateId,\n      layers: decompressedLayers\n    }\n  } catch (error) {\n    logger.warn('Failed to decode template state:', error)\n    return null\n  }\n}\n\nexport function isValidEncodedState(encoded: string): boolean {\n  if (!encoded || encoded.length < 1) return false\n\n  try {\n    const jsonString = base64UrlToString(encoded)\n    const compressedState = JSON.parse(jsonString)\n\n    if (!compressedState.v || compressedState.v !== ENCODING_VERSION) {\n      return false\n    }\n\n    return !!(compressedState[PROP_MAP.selectedTemplateId] && Array.isArray(compressedState[PROP_MAP.layers]))\n  } catch {\n    return false\n  }\n}\n\nexport function generateShareableUrl(state: AppState): string {\n  const encoded = encodeTemplateStateCompact(state)\n  const baseUrl = window.location.origin + window.location.pathname\n  return `${baseUrl}#/${encoded}`\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * SVG Bounds Analysis Utility\n *\n * Analyzes SVG content to calculate actual bounding boxes and centers\n * for precise positioning and centering calculations.\n * Includes advanced center-of-mass (centroid) calculations for improved\n * visual centering of complex shapes like stars, triangles, and arrows.\n */\n\nimport type { Point, ViewBox } from '../types/svg-types'\nimport { logger } from './logger'\n\ninterface SvgBounds {\n  xMin: number\n  xMax: number\n  yMin: number\n  yMax: number\n  width: number\n  height: number\n  centerX: number\n  centerY: number\n}\n\nexport interface SvgViewBoxFitAnalysis {\n  isProperlyFitted: boolean\n  isCentered: boolean\n  recommendedViewBox: string\n  offset: Point\n  severity: 'none' | 'minor' | 'major'\n  issues: string[]\n  contentBounds: SvgBounds\n  currentViewBox: ViewBox | null\n}\n\nexport interface SvgCentroid {\n  boundingBoxCenter: Point\n  centroidCenter: Point\n  useCentroid: boolean\n  shapeType: ShapeType\n  confidence: number\n}\n\nexport type ShapeType =\n  | 'star'\n  | 'triangle'\n  | 'arrow'\n  | 'circle'\n  | 'rectangle'\n  | 'polygon'\n  | 'complex-path'\n  | 'line'\n  | 'unknown'\n\n/**\n * Calculate the bounding box of all content within an SVG\n * Minimal implementation for production centroid and viewBox analysis\n */\nfunction calculateContentBounds(svgContent: string): SvgBounds {\n  // Extract viewBox as fallback bounds\n  const viewBoxMatch = svgContent.match(/viewBox\\s*=\\s*[\"']([^\"']+)[\"']/i)\n  if (viewBoxMatch) {\n    const parts = viewBoxMatch[1].split(/\\s+/).map(Number)\n    if (parts.length === 4) {\n      const [x, y, width, height] = parts\n      return {\n        xMin: x,\n        xMax: x + width,\n        yMin: y,\n        yMax: y + height,\n        width,\n        height,\n        centerX: x + width / 2,\n        centerY: y + height / 2\n      }\n    }\n  }\n\n  // Fallback to zero bounds if no viewBox found\n  return {\n    xMin: 0,\n    xMax: 0,\n    yMin: 0,\n    yMax: 0,\n    width: 0,\n    height: 0,\n    centerX: 0,\n    centerY: 0\n  }\n}\n\n/**\n * Parse points attribute into coordinate pairs\n * Used by polygon centroid calculations\n */\nfunction parsePointsAttribute(points: string): { x: number; y: number }[] {\n  const coordinates: { x: number; y: number }[] = []\n  const values = points.split(/[,\\s]+/).filter(val => val.trim())\n\n  for (let i = 0; i < values.length - 1; i += 2) {\n    const x = parseFloat(values[i])\n    const y = parseFloat(values[i + 1])\n\n    if (!isNaN(x) && !isNaN(y)) {\n      coordinates.push({ x, y })\n    }\n  }\n\n  return coordinates\n}\n\n/**\n * Calculate confidence score for SVG bounds calculation accuracy\n * Returns a score from 0.0 (no confidence) to 1.0 (high confidence)\n */\nfunction calculateBoundsConfidence(contentBounds: SvgBounds, viewBox: { x: number; y: number; width: number; height: number } | null): number {\n  let confidence = 1.0\n\n  if (!isFinite(contentBounds.width) || !isFinite(contentBounds.height) ||\n      contentBounds.width < 0 || contentBounds.height < 0 ||\n      !isFinite(contentBounds.xMin) || !isFinite(contentBounds.yMin)) {\n    return 0.0\n  }\n\n  if (!viewBox) {\n    return 0.6\n  }\n\n  const boundsToViewBoxRatio = Math.max(\n    contentBounds.width / viewBox.width,\n    contentBounds.height / viewBox.height\n  )\n\n  // If content bounds are more than 100x larger than viewBox, likely parsing error\n  if (boundsToViewBoxRatio > 100) {\n    confidence *= 0.1\n  } else if (boundsToViewBoxRatio > 50) {\n    confidence *= 0.3\n  } else if (boundsToViewBoxRatio > 20) {\n    confidence *= 0.6\n  }\n\n  const minBoundsRatio = Math.min(\n    contentBounds.width / viewBox.width,\n    contentBounds.height / viewBox.height\n  )\n\n  if (minBoundsRatio < 0.01) {\n    confidence *= 0.5\n  }\n\n  const contentCenterX = contentBounds.centerX\n  const contentCenterY = contentBounds.centerY\n  const viewBoxCenterX = viewBox.x + viewBox.width / 2\n  const viewBoxCenterY = viewBox.y + viewBox.height / 2\n\n  const centerOffsetX = Math.abs(contentCenterX - viewBoxCenterX)\n  const centerOffsetY = Math.abs(contentCenterY - viewBoxCenterY)\n\n  // If content center is more than 5x viewBox size away from viewBox center\n  if (centerOffsetX > viewBox.width * 5 || centerOffsetY > viewBox.height * 5) {\n    confidence *= 0.2\n  } else if (centerOffsetX > viewBox.width * 2 || centerOffsetY > viewBox.height * 2) {\n    confidence *= 0.7\n  }\n\n  // Check for degenerate cases (zero-width or zero-height content)\n  if (contentBounds.width === 0 || contentBounds.height === 0) {\n    confidence *= 0.3\n  }\n\n  return Math.max(0, Math.min(1, confidence))\n}\n\n/**\n * Analyze how well an SVG's viewBox fits and centers its content\n */\nexport function analyzeSvgViewBoxFit(svgContent: string, padding = 2): SvgViewBoxFitAnalysis {\n  // Extract viewBox\n  const viewBoxMatch = svgContent.match(/viewBox\\s*=\\s*[\"']([^\"']+)[\"']/i)\n  let viewBox: { x: number; y: number; width: number; height: number } | null = null\n\n  if (viewBoxMatch) {\n    const parts = viewBoxMatch[1].split(/\\s+/).map(Number)\n    if (parts.length === 4) {\n      viewBox = { x: parts[0], y: parts[1], width: parts[2], height: parts[3] }\n    }\n  }\n\n  // Calculate content bounds\n  const contentBounds = calculateContentBounds(svgContent)\n\n  const issues: string[] = []\n  let isProperlyFitted = true\n  let isCentered = true\n  let severity: 'none' | 'minor' | 'major' = 'none'\n\n  // Calculate confidence in bounds calculation\n  const confidence = calculateBoundsConfidence(contentBounds, viewBox)\n\n  // Only proceed with centering analysis if we have reasonable confidence\n  if (confidence < 0.5) {\n    // Use actual calculated contentBounds instead of fabricating with hardcoded defaults\n    const fallbackViewBox = viewBox\n      ? `${viewBox.x} ${viewBox.y} ${viewBox.width} ${viewBox.height}`\n      : `${contentBounds.xMin} ${contentBounds.yMin} ${contentBounds.width} ${contentBounds.height}`\n\n    return {\n      isProperlyFitted: true,\n      isCentered: true,\n      recommendedViewBox: fallbackViewBox,\n      offset: { x: 0, y: 0 },\n      severity: 'none',\n      issues: [`Path parsing confidence too low (${Math.round(confidence * 100)}%) - skipping analysis`],\n      contentBounds, // Use actual calculated bounds - NO hardcoded defaults\n      currentViewBox: viewBox\n    }\n  }\n\n  // Calculate recommended viewBox with padding\n  const recommendedX = contentBounds.xMin - padding\n  const recommendedY = contentBounds.yMin - padding\n  const recommendedWidth = contentBounds.width + (padding * 2)\n  const recommendedHeight = contentBounds.height + (padding * 2)\n  const recommendedViewBox = `${recommendedX} ${recommendedY} ${recommendedWidth} ${recommendedHeight}`\n\n  // Calculate recommended center\n  const _recommendedCenterX = recommendedX + recommendedWidth / 2\n  const _recommendedCenterY = recommendedY + recommendedHeight / 2\n\n  let offset = { x: 0, y: 0 }\n\n  if (viewBox) {\n    const currentCenterX = viewBox.x + viewBox.width / 2\n    const currentCenterY = viewBox.y + viewBox.height / 2\n\n    // Calculate how far the content center is from the viewBox center\n    offset = {\n      x: contentBounds.centerX - currentCenterX,\n      y: contentBounds.centerY - currentCenterY\n    }\n\n    // Check if content is properly fitted within viewBox\n    const contentExceedsLeft = contentBounds.xMin < viewBox.x\n    const contentExceedsRight = contentBounds.xMax > (viewBox.x + viewBox.width)\n    const contentExceedsTop = contentBounds.yMin < viewBox.y\n    const contentExceedsBottom = contentBounds.yMax > (viewBox.y + viewBox.height)\n\n    if (contentExceedsLeft || contentExceedsRight || contentExceedsTop || contentExceedsBottom) {\n      isProperlyFitted = false\n      issues.push('Content extends outside viewBox boundaries')\n    }\n\n    // Check if there's excessive empty space (viewBox much larger than content)\n    const viewBoxArea = viewBox.width * viewBox.height\n    const contentArea = contentBounds.width * contentBounds.height\n    const utilization = contentArea / viewBoxArea\n\n    if (utilization < 0.25) {\n      issues.push('ViewBox is much larger than content (poor space utilization)')\n    }\n\n    // Check centering - consider minor if offset > 5% of viewBox dimension\n    const offsetThresholdX = viewBox.width * 0.05\n    const offsetThresholdY = viewBox.height * 0.05\n\n    if (Math.abs(offset.x) > offsetThresholdX || Math.abs(offset.y) > offsetThresholdY) {\n      isCentered = false\n      issues.push(`Content is off-center by ${offset.x.toFixed(2)}, ${offset.y.toFixed(2)} units`)\n    }\n\n    // Determine severity\n    const maxOffsetPercent = Math.max(\n      Math.abs(offset.x) / viewBox.width,\n      Math.abs(offset.y) / viewBox.height\n    )\n\n    if (!isProperlyFitted || maxOffsetPercent > 0.15) {\n      severity = 'major'\n    } else if (!isCentered || maxOffsetPercent > 0.05) {\n      severity = 'minor'\n    }\n\n  } else {\n    // No viewBox found\n    issues.push('No viewBox attribute found in SVG')\n    isProperlyFitted = false\n    isCentered = false\n    severity = 'major'\n  }\n\n  return {\n    isProperlyFitted,\n    isCentered,\n    recommendedViewBox,\n    offset,\n    severity,\n    issues,\n    contentBounds,\n    currentViewBox: viewBox\n  }\n}\n\n// =============================================================================\n// CENTER-OF-MASS (CENTROID) CALCULATION FUNCTIONS\n// =============================================================================\n\n/**\n * Calculate the optimal transform origin for an SVG using center-of-mass analysis\n */\nexport function calculateOptimalTransformOrigin(svgContent: string): Point {\n  const centroidAnalysis = calculateSvgCentroid(svgContent)\n\n  let result: Point\n  if (centroidAnalysis.useCentroid && centroidAnalysis.confidence > 0.7) {\n    result = centroidAnalysis.centroidCenter\n  } else {\n    // Fallback to bounding box center for low-confidence cases\n    result = centroidAnalysis.boundingBoxCenter\n  }\n\n  // Debug logging for NaN detection\n  if (isNaN(result.x) || isNaN(result.y)) {\n    logger.error('NaN detected in calculateOptimalTransformOrigin:', {\n      result,\n      centroidAnalysis,\n      svgContentLength: svgContent.length,\n      svgContentPreview: svgContent.substring(0, 100)\n    })\n  }\n\n  return result\n}\n\n/**\n * Determine if an SVG should use centroid-based transform origin\n */\nexport function shouldUseCentroidOrigin(svgContent: string): boolean {\n  const centroidAnalysis = calculateSvgCentroid(svgContent)\n  return centroidAnalysis.useCentroid && centroidAnalysis.confidence > 0.7\n}\n\n/**\n * Calculate the center-of-mass (centroid) for an SVG\n */\nexport function calculateSvgCentroid(svgContent: string): SvgCentroid {\n  const bounds = calculateContentBounds(svgContent)\n  const boundingBoxCenter: Point = {\n    x: bounds.centerX,\n    y: bounds.centerY\n  }\n\n  // Detect shape type and calculate appropriate centroid\n  const shapeType = detectShapeType(svgContent)\n  let centroidCenter: Point = boundingBoxCenter\n  let useCentroid = false\n  let confidence = 0\n\n  switch (shapeType) {\n    case 'polygon': {\n      const polygonResult = calculatePolygonCentroid(svgContent)\n      if (polygonResult) {\n        centroidCenter = polygonResult.centroid\n        useCentroid = true\n        confidence = polygonResult.confidence\n      }\n      break\n    }\n\n    case 'complex-path': {\n      // Use general-purpose path centroid calculation for all <path> elements\n      // This handles curves, stars, triangles, arrows, and all other path types\n      const pathResult = calculatePathCentroid(svgContent)\n      if (pathResult) {\n        centroidCenter = pathResult.centroid\n        useCentroid = true\n        confidence = pathResult.confidence\n      }\n      break\n    }\n\n    default: {\n      // For circles, rectangles, lines, and unknown shapes, use bounding box center\n      confidence = 0.9 // High confidence in bounding box for regular shapes\n      break\n    }\n  }\n\n  return {\n    boundingBoxCenter,\n    centroidCenter,\n    useCentroid,\n    shapeType,\n    confidence\n  }\n}\n\n/**\n * Detect the primary shape type of an SVG for centroid calculation\n *\n * Uses strict detection for basic shapes only, falling back to 'complex-path'\n * for all <path> elements which use the robust general-purpose centroid algorithm.\n */\nexport function detectShapeType(svgContent: string): ShapeType {\n  // Check for <path> elements - use general-purpose algorithm for all paths\n  const pathMatch = svgContent.match(/<path[^>]*d\\s*=\\s*[\"']([^\"']+)[\"']/i)\n  if (pathMatch) {\n    return 'complex-path'\n  }\n\n  // Check for basic geometric shapes\n  if (svgContent.includes('<circle') || svgContent.includes('<ellipse')) {\n    return 'circle'\n  }\n\n  if (svgContent.includes('<rect')) {\n    return 'rectangle'\n  }\n\n  if (svgContent.includes('<polygon') || svgContent.includes('<polyline')) {\n    return 'polygon'\n  }\n\n  if (svgContent.includes('<line')) {\n    return 'line'\n  }\n\n  return 'unknown'\n}\n\n// Shape-specific centroid functions removed - using general-purpose calculatePathCentroid() for all paths\n\n/**\n * Calculate centroid for general polygons\n */\nfunction calculatePolygonCentroid(svgContent: string): { centroid: Point; confidence: number } | null {\n  // Try to extract polygon points first\n  const polygonMatch = svgContent.match(/<polygon[^>]*points\\s*=\\s*[\"']([^\"']+)[\"']/i)\n\n  if (polygonMatch) {\n    const pointsStr = polygonMatch[1]\n    const points = parsePointsAttribute(pointsStr)\n    const centroid = calculatePolygonCentroidFromPoints(points)\n\n    return {\n      centroid,\n      confidence: 0.85\n    }\n  }\n\n  // Fallback to path-based polygon\n  const pathMatch = svgContent.match(/<path[^>]*d\\s*=\\s*[\"']([^\"']+)[\"']/i)\n  if (!pathMatch) return null\n\n  const pathData = pathMatch[1]\n  const points = extractPathPoints(pathData)\n\n  if (points.length < 3) return null\n\n  const centroid = calculatePolygonCentroidFromPoints(points)\n\n  return {\n    centroid,\n    confidence: 0.8\n  }\n}\n\n/**\n * Calculate centroid for complex path elements\n *\n * Uses proper SVG path parsing that converts curves (A, C, Q commands) to line segments\n * by sampling points along the curves, enabling accurate centroid calculation for all path types.\n */\nfunction calculatePathCentroid(svgContent: string): { centroid: Point; confidence: number } | null {\n  const pathMatch = svgContent.match(/<path[^>]*d\\s*=\\s*[\"']([^\"']+)[\"']/i)\n  if (!pathMatch) return null\n\n  const pathData = pathMatch[1]\n\n  // Use proper path parser that handles curves by converting to line segments\n  const points = extractPathPoints(pathData)\n\n  if (points.length < 2) {\n    // Not enough points to determine center reliably\n    return null\n  }\n\n  // Use polygon centroid calculation for all path types\n  const centroid = calculatePolygonCentroidFromPoints(points)\n\n  return {\n    centroid,\n    confidence: 0.8 // High confidence since we now properly parse curves\n  }\n}\n\n// =============================================================================\n// HELPER FUNCTIONS\n// =============================================================================\n\n// Shape detection helper functions removed - using general-purpose centroid calculation for all paths\n\n/**\n * Extract coordinate points from path data\n */\n/**\n * Parse SVG path data and extract points, converting curves to line segments\n * Handles M, L, H, V, C, S, Q, T, A commands (absolute and relative)\n */\nfunction extractPathPoints(pathData: string): Point[] {\n  const points: Point[] = []\n  let currentX = 0\n  let currentY = 0\n  let startX = 0\n  let startY = 0\n\n  // Parse path commands with their parameters\n  const commandRegex = /([MmLlHhVvCcSsQqTtAaZz])([^MmLlHhVvCcSsQqTtAaZz]*)/g\n  let match\n\n  while ((match = commandRegex.exec(pathData)) !== null) {\n    const command = match[1]\n    const paramsStr = match[2].trim()\n    // Match numbers including those starting with decimal point (e.g., .5, .224, -.433)\n    const params = paramsStr.match(/-?(?:\\d+\\.?\\d*|\\.\\d+)/g)?.map(Number) || []\n\n    switch (command) {\n      case 'M': // Move to (absolute)\n        if (params.length >= 2) {\n          currentX = params[0]\n          currentY = params[1]\n          startX = currentX\n          startY = currentY\n          points.push({ x: currentX, y: currentY })\n        }\n        break\n\n      case 'm': // Move to (relative)\n        if (params.length >= 2) {\n          currentX += params[0]\n          currentY += params[1]\n          startX = currentX\n          startY = currentY\n          points.push({ x: currentX, y: currentY })\n        }\n        break\n\n      case 'L': // Line to (absolute)\n        for (let i = 0; i < params.length; i += 2) {\n          currentX = params[i]\n          currentY = params[i + 1]\n          points.push({ x: currentX, y: currentY })\n        }\n        break\n\n      case 'l': // Line to (relative)\n        for (let i = 0; i < params.length; i += 2) {\n          currentX += params[i]\n          currentY += params[i + 1]\n          points.push({ x: currentX, y: currentY })\n        }\n        break\n\n      case 'H': // Horizontal line (absolute)\n        for (const x of params) {\n          currentX = x\n          points.push({ x: currentX, y: currentY })\n        }\n        break\n\n      case 'h': // Horizontal line (relative)\n        for (const dx of params) {\n          currentX += dx\n          points.push({ x: currentX, y: currentY })\n        }\n        break\n\n      case 'V': // Vertical line (absolute)\n        for (const y of params) {\n          currentY = y\n          points.push({ x: currentX, y: currentY })\n        }\n        break\n\n      case 'v': // Vertical line (relative)\n        for (const dy of params) {\n          currentY += dy\n          points.push({ x: currentX, y: currentY })\n        }\n        break\n\n      case 'C': // Cubic bezier (absolute)\n        for (let i = 0; i < params.length; i += 6) {\n          const cp1x = params[i]\n          const cp1y = params[i + 1]\n          const cp2x = params[i + 2]\n          const cp2y = params[i + 3]\n          const x = params[i + 4]\n          const y = params[i + 5]\n\n          // Sample the curve with 10 points\n          for (let t = 0.1; t <= 1; t += 0.1) {\n            const mt = 1 - t\n            const px = mt * mt * mt * currentX + 3 * mt * mt * t * cp1x + 3 * mt * t * t * cp2x + t * t * t * x\n            const py = mt * mt * mt * currentY + 3 * mt * mt * t * cp1y + 3 * mt * t * t * cp2y + t * t * t * y\n            points.push({ x: px, y: py })\n          }\n\n          currentX = x\n          currentY = y\n        }\n        break\n\n      case 'c': // Cubic bezier (relative)\n        for (let i = 0; i < params.length; i += 6) {\n          const cp1x = currentX + params[i]\n          const cp1y = currentY + params[i + 1]\n          const cp2x = currentX + params[i + 2]\n          const cp2y = currentY + params[i + 3]\n          const x = currentX + params[i + 4]\n          const y = currentY + params[i + 5]\n\n          // Sample the curve with 10 points\n          for (let t = 0.1; t <= 1; t += 0.1) {\n            const mt = 1 - t\n            const px = mt * mt * mt * currentX + 3 * mt * mt * t * cp1x + 3 * mt * t * t * cp2x + t * t * t * x\n            const py = mt * mt * mt * currentY + 3 * mt * mt * t * cp1y + 3 * mt * t * t * cp2y + t * t * t * y\n            points.push({ x: px, y: py })\n          }\n\n          currentX = x\n          currentY = y\n        }\n        break\n\n      case 'Q': // Quadratic bezier (absolute)\n        for (let i = 0; i < params.length; i += 4) {\n          const cpx = params[i]\n          const cpy = params[i + 1]\n          const x = params[i + 2]\n          const y = params[i + 3]\n\n          // Sample the curve with 8 points\n          for (let t = 0.125; t <= 1; t += 0.125) {\n            const mt = 1 - t\n            const px = mt * mt * currentX + 2 * mt * t * cpx + t * t * x\n            const py = mt * mt * currentY + 2 * mt * t * cpy + t * t * y\n            points.push({ x: px, y: py })\n          }\n\n          currentX = x\n          currentY = y\n        }\n        break\n\n      case 'q': // Quadratic bezier (relative)\n        for (let i = 0; i < params.length; i += 4) {\n          const cpx = currentX + params[i]\n          const cpy = currentY + params[i + 1]\n          const x = currentX + params[i + 2]\n          const y = currentY + params[i + 3]\n\n          // Sample the curve with 8 points\n          for (let t = 0.125; t <= 1; t += 0.125) {\n            const mt = 1 - t\n            const px = mt * mt * currentX + 2 * mt * t * cpx + t * t * x\n            const py = mt * mt * currentY + 2 * mt * t * cpy + t * t * y\n            points.push({ x: px, y: py })\n          }\n\n          currentX = x\n          currentY = y\n        }\n        break\n\n      case 'A': // Arc (absolute) - Approximate with line segments\n        for (let i = 0; i < params.length; i += 7) {\n          const x = params[i + 5]\n          const y = params[i + 6]\n\n          // Simple approximation: create 8 intermediate points\n          for (let j = 1; j <= 8; j++) {\n            const t = j / 8\n            const px = currentX + (x - currentX) * t\n            const py = currentY + (y - currentY) * t\n            points.push({ x: px, y: py })\n          }\n\n          currentX = x\n          currentY = y\n        }\n        break\n\n      case 'a': // Arc (relative) - Approximate with line segments\n        for (let i = 0; i < params.length; i += 7) {\n          const x = currentX + params[i + 5]\n          const y = currentY + params[i + 6]\n\n          // Simple approximation: create 8 intermediate points\n          for (let j = 1; j <= 8; j++) {\n            const t = j / 8\n            const px = currentX + (x - currentX) * t\n            const py = currentY + (y - currentY) * t\n            points.push({ x: px, y: py })\n          }\n\n          currentX = x\n          currentY = y\n        }\n        break\n\n      case 'Z':\n      case 'z': // Close path\n        if (currentX !== startX || currentY !== startY) {\n          points.push({ x: startX, y: startY })\n          currentX = startX\n          currentY = startY\n        }\n        break\n    }\n  }\n\n  return points\n}\n\n/**\n * Calculate centroid of a polygon using the shoelace formula\n */\nfunction calculatePolygonCentroidFromPoints(points: Point[]): Point {\n  if (points.length === 0) return { x: 0, y: 0 }\n  if (points.length === 1) return points[0]\n  if (points.length === 2) return {\n    x: (points[0].x + points[1].x) / 2,\n    y: (points[0].y + points[1].y) / 2\n  }\n\n  let area = 0\n  let centroidX = 0\n  let centroidY = 0\n\n  // Apply shoelace formula for polygon centroid\n  for (let i = 0; i < points.length; i++) {\n    const j = (i + 1) % points.length\n    const cross = points[i].x * points[j].y - points[j].x * points[i].y\n\n    area += cross\n    centroidX += (points[i].x + points[j].x) * cross\n    centroidY += (points[i].y + points[j].y) * cross\n  }\n\n  area = area / 2\n\n  if (Math.abs(area) < 0.000001) {\n    // Degenerate case - return average of points\n    const avgX = points.reduce((sum, p) => sum + p.x, 0) / points.length\n    const avgY = points.reduce((sum, p) => sum + p.y, 0) / points.length\n    return {\n      x: isFinite(avgX) ? avgX : 0,\n      y: isFinite(avgY) ? avgY : 0\n    }\n  }\n\n  centroidX = centroidX / (6 * area)\n  centroidY = centroidY / (6 * area)\n\n  // Safety guard against NaN/infinite values\n  const safeX = isFinite(centroidX) ? centroidX : 0\n  const safeY = isFinite(centroidY) ? centroidY : 0\n\n  return { x: safeX, y: safeY }\n}\n\n// Helper functions removed - using general-purpose calculatePathCentroid() for all paths", "/* eslint-env serviceworker */\n/* eslint-disable no-undef */\n/**\n * SVG Request Handler for Service Worker\n * ======================================\n *\n * Handles .svg URL requests, generates SVG content, and manages caching\n */\n\nimport { loadTemplate } from './sw-template-loader'\nimport { generateSvgString } from '../utils/svg-string-generator'\nimport { decodeTemplateStateCompact } from '../utils/url-encoding'\nimport { logger } from '../utils/logger'\nimport { calculateOptimalTransformOrigin } from '../utils/svg-bounds'\nimport type { FlatLayerData } from '../types/template-types'\n\n// Cache name for SVG responses\nconst CACHE_NAME = 'sticker-factory-svg-v2'\n\n/**\n * Handle SVG request: decode state, load template, generate SVG\n */\nexport async function handleSvgRequest(url: URL, request: Request): Promise<Response> {\n  try {\n    // Extract encoded state from URL path (remove leading / and trailing .svg)\n    const encodedState = url.pathname.slice(1, -4)\n\n    // Check cache first\n    const cache = await caches.open(CACHE_NAME)\n    const cacheKey = new Request(url.toString())\n    const cached = await cache.match(cacheKey)\n\n    if (cached) {\n      logger.debug('SVG cache hit:', url.pathname)\n      return cached.clone()\n    }\n\n    logger.debug('SVG cache miss, generating:', url.pathname)\n\n    // Decode state from URL\n    const state = decodeTemplateStateCompact(encodedState)\n\n    if (!state || !state.selectedTemplateId) {\n      return createErrorResponse('Invalid state encoding', 400)\n    }\n\n    // Load template (basic metadata only)\n    const template = await loadTemplate(state.selectedTemplateId)\n\n    if (!template) {\n      return createErrorResponse('Template not found', 404)\n    }\n\n    // CRITICAL: Compute transformOrigin for svgImage layers (same as store does)\n    // This ensures IDENTICAL rendering between main app and .svg URLs\n    const enhancedLayers = (state.layers || []).map((layer: FlatLayerData) => {\n      // Only compute for svgImage layers that have content but no transformOrigin\n      if (layer.type === 'svgImage' && layer.svgContent && !layer.transformOrigin) {\n        try {\n          const transformOrigin = calculateOptimalTransformOrigin(layer.svgContent)\n          return { ...layer, transformOrigin }\n        } catch (error) {\n          // Fallback to geometric center of standard 24x24 viewBox\n          logger.warn('Failed to calculate transformOrigin, using fallback:', error)\n          return { ...layer, transformOrigin: { x: 12, y: 12 } }\n        }\n      }\n      return layer\n    })\n\n    // Generate SVG string using unified generator\n    const svgContent = generateSvgString(template, enhancedLayers)\n\n    // Create response\n    const response = new Response(svgContent, {\n      headers: {\n        'Content-Type': 'image/svg+xml; charset=utf-8',\n        'Cache-Control': 'public, max-age=31536000, immutable',\n        ...getCorsHeaders(request)\n      },\n      status: 200\n    })\n\n    // Cache the response\n    await cache.put(cacheKey, response.clone())\n\n    logger.debug('SVG generated and cached:', url.pathname)\n\n    return response\n  } catch (error) {\n    logger.error('SVG generation failed:', error)\n    return createErrorResponse('SVG generation failed', 500)\n  }\n}\n\n/**\n * Create error SVG response\n */\nfunction createErrorResponse(message: string, status: number): Response {\n  const errorSvg = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 200\">\n  <rect width=\"400\" height=\"200\" fill=\"#fee\" />\n  <text x=\"200\" y=\"100\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#c00\">\n    ${escapeXml(message)}\n  </text>\n</svg>`\n\n  return new Response(errorSvg, {\n    headers: {\n      'Content-Type': 'image/svg+xml; charset=utf-8',\n      'Cache-Control': 'no-cache'\n    },\n    status\n  })\n}\n\n/**\n * Get CORS headers for response\n */\nfunction getCorsHeaders(request: Request): Record<string, string> {\n  const origin = request.headers.get('Origin')\n\n  // Only allow same-origin requests\n  if (origin && isOriginAllowed(origin)) {\n    return {\n      'Access-Control-Allow-Origin': origin,\n      'Access-Control-Allow-Methods': 'GET',\n      'Access-Control-Allow-Headers': 'Content-Type',\n      'Vary': 'Origin'\n    }\n  }\n\n  return {}\n}\n\n/**\n * Check if origin is allowed (same-origin only)\n */\nfunction isOriginAllowed(origin: string): boolean {\n  try {\n    const requestOrigin = new URL(origin)\n    const selfOrigin = new URL(self.location.href)\n    return requestOrigin.origin === selfOrigin.origin\n  } catch {\n    return false\n  }\n}\n\n/**\n * Escape XML special characters\n */\nfunction escapeXml(text: string): string {\n  return text\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;')\n}\n", "/* eslint-env serviceworker */\n/* eslint-disable no-undef */\n/**\n * Service Worker Entry Point\n * ==========================\n *\n * Intercepts .svg URL requests and generates SVG content on-the-fly\n */\n\nimport { handleSvgRequest } from './svg-handler'\nimport { logger } from '../utils/logger'\n\ndeclare const self: ServiceWorkerGlobalScope\n\n// Service Worker install event\nself.addEventListener('install', (event) => {\n  logger.info('Service Worker installing...')\n  // Skip waiting to activate immediately\n  event.waitUntil(self.skipWaiting())\n})\n\n// Service Worker activate event\nself.addEventListener('activate', (event) => {\n  logger.info('Service Worker activated')\n  // Claim clients immediately\n  event.waitUntil(self.clients.claim())\n})\n\n// Service Worker fetch event - intercept .svg requests\nself.addEventListener('fetch', (event) => {\n  const url = new URL(event.request.url)\n\n  // Match pattern: /{encodedState}.svg (not /images/*.svg or other paths)\n  if (url.pathname.match(/^\\/[A-Za-z0-9_-]+\\.svg$/)) {\n    logger.debug('Intercepting SVG request:', url.pathname)\n    event.respondWith(handleSvgRequest(url, event.request))\n    return\n  }\n\n  // Pass through all other requests\n  event.respondWith(fetch(event.request))\n})\n"],
  "mappings": "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",
  "names": ["exception", "map", "schema", "type", "extend", "str", "string", "import_meta", "x", "y", "rotation", "transform", "points", "centroid", "escapeXml"]
}
